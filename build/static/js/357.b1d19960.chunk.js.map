{"version":3,"file":"static/js/357.b1d19960.chunk.js","mappings":"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","sources":["../node_modules/@codemirror/search/dist/index.js","../node_modules/@codemirror/lint/dist/index.js","../node_modules/@uiw/codemirror-extensions-basic-setup/esm/index.js","../node_modules/@codemirror/commands/dist/index.js","../node_modules/@codemirror/theme-one-dark/dist/index.js"],"sourcesContent":["import { showPanel, EditorView, getPanel, Decoration, ViewPlugin, runScopeHandlers } from '@codemirror/view';\nimport { codePointAt, fromCodePoint, codePointSize, StateEffect, StateField, EditorSelection, Facet, combineConfig, CharCategory, RangeSetBuilder, Prec, EditorState, findClusterBreak } from '@codemirror/state';\nimport elt from 'crelt';\n\nconst basicNormalize = typeof String.prototype.normalize == \"function\"\n    ? x => x.normalize(\"NFKD\") : x => x;\n/**\nA search cursor provides an iterator over text matches in a\ndocument.\n*/\nclass SearchCursor {\n    /**\n    Create a text cursor. The query is the search string, `from` to\n    `to` provides the region to search.\n    \n    When `normalize` is given, it will be called, on both the query\n    string and the content it is matched against, before comparing.\n    You can, for example, create a case-insensitive search by\n    passing `s => s.toLowerCase()`.\n    \n    Text is always normalized with\n    [`.normalize(\"NFKD\")`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize)\n    (when supported).\n    */\n    constructor(text, query, from = 0, to = text.length, normalize, test) {\n        this.test = test;\n        /**\n        The current match (only holds a meaningful value after\n        [`next`](https://codemirror.net/6/docs/ref/#search.SearchCursor.next) has been called and when\n        `done` is false).\n        */\n        this.value = { from: 0, to: 0 };\n        /**\n        Whether the end of the iterated region has been reached.\n        */\n        this.done = false;\n        this.matches = [];\n        this.buffer = \"\";\n        this.bufferPos = 0;\n        this.iter = text.iterRange(from, to);\n        this.bufferStart = from;\n        this.normalize = normalize ? x => normalize(basicNormalize(x)) : basicNormalize;\n        this.query = this.normalize(query);\n    }\n    peek() {\n        if (this.bufferPos == this.buffer.length) {\n            this.bufferStart += this.buffer.length;\n            this.iter.next();\n            if (this.iter.done)\n                return -1;\n            this.bufferPos = 0;\n            this.buffer = this.iter.value;\n        }\n        return codePointAt(this.buffer, this.bufferPos);\n    }\n    /**\n    Look for the next match. Updates the iterator's\n    [`value`](https://codemirror.net/6/docs/ref/#search.SearchCursor.value) and\n    [`done`](https://codemirror.net/6/docs/ref/#search.SearchCursor.done) properties. Should be called\n    at least once before using the cursor.\n    */\n    next() {\n        while (this.matches.length)\n            this.matches.pop();\n        return this.nextOverlapping();\n    }\n    /**\n    The `next` method will ignore matches that partially overlap a\n    previous match. This method behaves like `next`, but includes\n    such matches.\n    */\n    nextOverlapping() {\n        for (;;) {\n            let next = this.peek();\n            if (next < 0) {\n                this.done = true;\n                return this;\n            }\n            let str = fromCodePoint(next), start = this.bufferStart + this.bufferPos;\n            this.bufferPos += codePointSize(next);\n            let norm = this.normalize(str);\n            if (norm.length)\n                for (let i = 0, pos = start;; i++) {\n                    let code = norm.charCodeAt(i);\n                    let match = this.match(code, pos, this.bufferPos + this.bufferStart);\n                    if (i == norm.length - 1) {\n                        if (match) {\n                            this.value = match;\n                            return this;\n                        }\n                        break;\n                    }\n                    if (pos == start && i < str.length && str.charCodeAt(i) == code)\n                        pos++;\n                }\n        }\n    }\n    match(code, pos, end) {\n        let match = null;\n        for (let i = 0; i < this.matches.length; i += 2) {\n            let index = this.matches[i], keep = false;\n            if (this.query.charCodeAt(index) == code) {\n                if (index == this.query.length - 1) {\n                    match = { from: this.matches[i + 1], to: end };\n                }\n                else {\n                    this.matches[i]++;\n                    keep = true;\n                }\n            }\n            if (!keep) {\n                this.matches.splice(i, 2);\n                i -= 2;\n            }\n        }\n        if (this.query.charCodeAt(0) == code) {\n            if (this.query.length == 1)\n                match = { from: pos, to: end };\n            else\n                this.matches.push(1, pos);\n        }\n        if (match && this.test && !this.test(match.from, match.to, this.buffer, this.bufferStart))\n            match = null;\n        return match;\n    }\n}\nif (typeof Symbol != \"undefined\")\n    SearchCursor.prototype[Symbol.iterator] = function () { return this; };\n\nconst empty = { from: -1, to: -1, match: /*@__PURE__*//.*/.exec(\"\") };\nconst baseFlags = \"gm\" + (/x/.unicode == null ? \"\" : \"u\");\n/**\nThis class is similar to [`SearchCursor`](https://codemirror.net/6/docs/ref/#search.SearchCursor)\nbut searches for a regular expression pattern instead of a plain\nstring.\n*/\nclass RegExpCursor {\n    /**\n    Create a cursor that will search the given range in the given\n    document. `query` should be the raw pattern (as you'd pass it to\n    `new RegExp`).\n    */\n    constructor(text, query, options, from = 0, to = text.length) {\n        this.text = text;\n        this.to = to;\n        this.curLine = \"\";\n        /**\n        Set to `true` when the cursor has reached the end of the search\n        range.\n        */\n        this.done = false;\n        /**\n        Will contain an object with the extent of the match and the\n        match object when [`next`](https://codemirror.net/6/docs/ref/#search.RegExpCursor.next)\n        sucessfully finds a match.\n        */\n        this.value = empty;\n        if (/\\\\[sWDnr]|\\n|\\r|\\[\\^/.test(query))\n            return new MultilineRegExpCursor(text, query, options, from, to);\n        this.re = new RegExp(query, baseFlags + ((options === null || options === void 0 ? void 0 : options.ignoreCase) ? \"i\" : \"\"));\n        this.test = options === null || options === void 0 ? void 0 : options.test;\n        this.iter = text.iter();\n        let startLine = text.lineAt(from);\n        this.curLineStart = startLine.from;\n        this.matchPos = toCharEnd(text, from);\n        this.getLine(this.curLineStart);\n    }\n    getLine(skip) {\n        this.iter.next(skip);\n        if (this.iter.lineBreak) {\n            this.curLine = \"\";\n        }\n        else {\n            this.curLine = this.iter.value;\n            if (this.curLineStart + this.curLine.length > this.to)\n                this.curLine = this.curLine.slice(0, this.to - this.curLineStart);\n            this.iter.next();\n        }\n    }\n    nextLine() {\n        this.curLineStart = this.curLineStart + this.curLine.length + 1;\n        if (this.curLineStart > this.to)\n            this.curLine = \"\";\n        else\n            this.getLine(0);\n    }\n    /**\n    Move to the next match, if there is one.\n    */\n    next() {\n        for (let off = this.matchPos - this.curLineStart;;) {\n            this.re.lastIndex = off;\n            let match = this.matchPos <= this.to && this.re.exec(this.curLine);\n            if (match) {\n                let from = this.curLineStart + match.index, to = from + match[0].length;\n                this.matchPos = toCharEnd(this.text, to + (from == to ? 1 : 0));\n                if (from == this.curLineStart + this.curLine.length)\n                    this.nextLine();\n                if ((from < to || from > this.value.to) && (!this.test || this.test(from, to, match))) {\n                    this.value = { from, to, match };\n                    return this;\n                }\n                off = this.matchPos - this.curLineStart;\n            }\n            else if (this.curLineStart + this.curLine.length < this.to) {\n                this.nextLine();\n                off = 0;\n            }\n            else {\n                this.done = true;\n                return this;\n            }\n        }\n    }\n}\nconst flattened = /*@__PURE__*/new WeakMap();\n// Reusable (partially) flattened document strings\nclass FlattenedDoc {\n    constructor(from, text) {\n        this.from = from;\n        this.text = text;\n    }\n    get to() { return this.from + this.text.length; }\n    static get(doc, from, to) {\n        let cached = flattened.get(doc);\n        if (!cached || cached.from >= to || cached.to <= from) {\n            let flat = new FlattenedDoc(from, doc.sliceString(from, to));\n            flattened.set(doc, flat);\n            return flat;\n        }\n        if (cached.from == from && cached.to == to)\n            return cached;\n        let { text, from: cachedFrom } = cached;\n        if (cachedFrom > from) {\n            text = doc.sliceString(from, cachedFrom) + text;\n            cachedFrom = from;\n        }\n        if (cached.to < to)\n            text += doc.sliceString(cached.to, to);\n        flattened.set(doc, new FlattenedDoc(cachedFrom, text));\n        return new FlattenedDoc(from, text.slice(from - cachedFrom, to - cachedFrom));\n    }\n}\nclass MultilineRegExpCursor {\n    constructor(text, query, options, from, to) {\n        this.text = text;\n        this.to = to;\n        this.done = false;\n        this.value = empty;\n        this.matchPos = toCharEnd(text, from);\n        this.re = new RegExp(query, baseFlags + ((options === null || options === void 0 ? void 0 : options.ignoreCase) ? \"i\" : \"\"));\n        this.test = options === null || options === void 0 ? void 0 : options.test;\n        this.flat = FlattenedDoc.get(text, from, this.chunkEnd(from + 5000 /* Chunk.Base */));\n    }\n    chunkEnd(pos) {\n        return pos >= this.to ? this.to : this.text.lineAt(pos).to;\n    }\n    next() {\n        for (;;) {\n            let off = this.re.lastIndex = this.matchPos - this.flat.from;\n            let match = this.re.exec(this.flat.text);\n            // Skip empty matches directly after the last match\n            if (match && !match[0] && match.index == off) {\n                this.re.lastIndex = off + 1;\n                match = this.re.exec(this.flat.text);\n            }\n            if (match) {\n                let from = this.flat.from + match.index, to = from + match[0].length;\n                // If a match goes almost to the end of a noncomplete chunk, try\n                // again, since it'll likely be able to match more\n                if ((this.flat.to >= this.to || match.index + match[0].length <= this.flat.text.length - 10) &&\n                    (!this.test || this.test(from, to, match))) {\n                    this.value = { from, to, match };\n                    this.matchPos = toCharEnd(this.text, to + (from == to ? 1 : 0));\n                    return this;\n                }\n            }\n            if (this.flat.to == this.to) {\n                this.done = true;\n                return this;\n            }\n            // Grow the flattened doc\n            this.flat = FlattenedDoc.get(this.text, this.flat.from, this.chunkEnd(this.flat.from + this.flat.text.length * 2));\n        }\n    }\n}\nif (typeof Symbol != \"undefined\") {\n    RegExpCursor.prototype[Symbol.iterator] = MultilineRegExpCursor.prototype[Symbol.iterator] =\n        function () { return this; };\n}\nfunction validRegExp(source) {\n    try {\n        new RegExp(source, baseFlags);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nfunction toCharEnd(text, pos) {\n    if (pos >= text.length)\n        return pos;\n    let line = text.lineAt(pos), next;\n    while (pos < line.to && (next = line.text.charCodeAt(pos - line.from)) >= 0xDC00 && next < 0xE000)\n        pos++;\n    return pos;\n}\n\nfunction createLineDialog(view) {\n    let line = String(view.state.doc.lineAt(view.state.selection.main.head).number);\n    let input = elt(\"input\", { class: \"cm-textfield\", name: \"line\", value: line });\n    let dom = elt(\"form\", {\n        class: \"cm-gotoLine\",\n        onkeydown: (event) => {\n            if (event.keyCode == 27) { // Escape\n                event.preventDefault();\n                view.dispatch({ effects: dialogEffect.of(false) });\n                view.focus();\n            }\n            else if (event.keyCode == 13) { // Enter\n                event.preventDefault();\n                go();\n            }\n        },\n        onsubmit: (event) => {\n            event.preventDefault();\n            go();\n        }\n    }, elt(\"label\", view.state.phrase(\"Go to line\"), \": \", input), \" \", elt(\"button\", { class: \"cm-button\", type: \"submit\" }, view.state.phrase(\"go\")), elt(\"button\", {\n        name: \"close\",\n        onclick: () => {\n            view.dispatch({ effects: dialogEffect.of(false) });\n            view.focus();\n        },\n        \"aria-label\": view.state.phrase(\"close\"),\n        type: \"button\"\n    }, [\"×\"]));\n    function go() {\n        let match = /^([+-])?(\\d+)?(:\\d+)?(%)?$/.exec(input.value);\n        if (!match)\n            return;\n        let { state } = view, startLine = state.doc.lineAt(state.selection.main.head);\n        let [, sign, ln, cl, percent] = match;\n        let col = cl ? +cl.slice(1) : 0;\n        let line = ln ? +ln : startLine.number;\n        if (ln && percent) {\n            let pc = line / 100;\n            if (sign)\n                pc = pc * (sign == \"-\" ? -1 : 1) + (startLine.number / state.doc.lines);\n            line = Math.round(state.doc.lines * pc);\n        }\n        else if (ln && sign) {\n            line = line * (sign == \"-\" ? -1 : 1) + startLine.number;\n        }\n        let docLine = state.doc.line(Math.max(1, Math.min(state.doc.lines, line)));\n        let selection = EditorSelection.cursor(docLine.from + Math.max(0, Math.min(col, docLine.length)));\n        view.dispatch({\n            effects: [dialogEffect.of(false), EditorView.scrollIntoView(selection.from, { y: 'center' })],\n            selection,\n        });\n        view.focus();\n    }\n    return { dom };\n}\nconst dialogEffect = /*@__PURE__*/StateEffect.define();\nconst dialogField = /*@__PURE__*/StateField.define({\n    create() { return true; },\n    update(value, tr) {\n        for (let e of tr.effects)\n            if (e.is(dialogEffect))\n                value = e.value;\n        return value;\n    },\n    provide: f => showPanel.from(f, val => val ? createLineDialog : null)\n});\n/**\nCommand that shows a dialog asking the user for a line number, and\nwhen a valid position is provided, moves the cursor to that line.\n\nSupports line numbers, relative line offsets prefixed with `+` or\n`-`, document percentages suffixed with `%`, and an optional\ncolumn position by adding `:` and a second number after the line\nnumber.\n*/\nconst gotoLine = view => {\n    let panel = getPanel(view, createLineDialog);\n    if (!panel) {\n        let effects = [dialogEffect.of(true)];\n        if (view.state.field(dialogField, false) == null)\n            effects.push(StateEffect.appendConfig.of([dialogField, baseTheme$1]));\n        view.dispatch({ effects });\n        panel = getPanel(view, createLineDialog);\n    }\n    if (panel)\n        panel.dom.querySelector(\"input\").select();\n    return true;\n};\nconst baseTheme$1 = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-panel.cm-gotoLine\": {\n        padding: \"2px 6px 4px\",\n        position: \"relative\",\n        \"& label\": { fontSize: \"80%\" },\n        \"& [name=close]\": {\n            position: \"absolute\",\n            top: \"0\", bottom: \"0\",\n            right: \"4px\",\n            backgroundColor: \"inherit\",\n            border: \"none\",\n            font: \"inherit\",\n            padding: \"0\"\n        }\n    }\n});\n\nconst defaultHighlightOptions = {\n    highlightWordAroundCursor: false,\n    minSelectionLength: 1,\n    maxMatches: 100,\n    wholeWords: false\n};\nconst highlightConfig = /*@__PURE__*/Facet.define({\n    combine(options) {\n        return combineConfig(options, defaultHighlightOptions, {\n            highlightWordAroundCursor: (a, b) => a || b,\n            minSelectionLength: Math.min,\n            maxMatches: Math.min\n        });\n    }\n});\n/**\nThis extension highlights text that matches the selection. It uses\nthe `\"cm-selectionMatch\"` class for the highlighting. When\n`highlightWordAroundCursor` is enabled, the word at the cursor\nitself will be highlighted with `\"cm-selectionMatch-main\"`.\n*/\nfunction highlightSelectionMatches(options) {\n    let ext = [defaultTheme, matchHighlighter];\n    if (options)\n        ext.push(highlightConfig.of(options));\n    return ext;\n}\nconst matchDeco = /*@__PURE__*/Decoration.mark({ class: \"cm-selectionMatch\" });\nconst mainMatchDeco = /*@__PURE__*/Decoration.mark({ class: \"cm-selectionMatch cm-selectionMatch-main\" });\n// Whether the characters directly outside the given positions are non-word characters\nfunction insideWordBoundaries(check, state, from, to) {\n    return (from == 0 || check(state.sliceDoc(from - 1, from)) != CharCategory.Word) &&\n        (to == state.doc.length || check(state.sliceDoc(to, to + 1)) != CharCategory.Word);\n}\n// Whether the characters directly at the given positions are word characters\nfunction insideWord(check, state, from, to) {\n    return check(state.sliceDoc(from, from + 1)) == CharCategory.Word\n        && check(state.sliceDoc(to - 1, to)) == CharCategory.Word;\n}\nconst matchHighlighter = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.decorations = this.getDeco(view);\n    }\n    update(update) {\n        if (update.selectionSet || update.docChanged || update.viewportChanged)\n            this.decorations = this.getDeco(update.view);\n    }\n    getDeco(view) {\n        let conf = view.state.facet(highlightConfig);\n        let { state } = view, sel = state.selection;\n        if (sel.ranges.length > 1)\n            return Decoration.none;\n        let range = sel.main, query, check = null;\n        if (range.empty) {\n            if (!conf.highlightWordAroundCursor)\n                return Decoration.none;\n            let word = state.wordAt(range.head);\n            if (!word)\n                return Decoration.none;\n            check = state.charCategorizer(range.head);\n            query = state.sliceDoc(word.from, word.to);\n        }\n        else {\n            let len = range.to - range.from;\n            if (len < conf.minSelectionLength || len > 200)\n                return Decoration.none;\n            if (conf.wholeWords) {\n                query = state.sliceDoc(range.from, range.to); // TODO: allow and include leading/trailing space?\n                check = state.charCategorizer(range.head);\n                if (!(insideWordBoundaries(check, state, range.from, range.to) &&\n                    insideWord(check, state, range.from, range.to)))\n                    return Decoration.none;\n            }\n            else {\n                query = state.sliceDoc(range.from, range.to);\n                if (!query)\n                    return Decoration.none;\n            }\n        }\n        let deco = [];\n        for (let part of view.visibleRanges) {\n            let cursor = new SearchCursor(state.doc, query, part.from, part.to);\n            while (!cursor.next().done) {\n                let { from, to } = cursor.value;\n                if (!check || insideWordBoundaries(check, state, from, to)) {\n                    if (range.empty && from <= range.from && to >= range.to)\n                        deco.push(mainMatchDeco.range(from, to));\n                    else if (from >= range.to || to <= range.from)\n                        deco.push(matchDeco.range(from, to));\n                    if (deco.length > conf.maxMatches)\n                        return Decoration.none;\n                }\n            }\n        }\n        return Decoration.set(deco);\n    }\n}, {\n    decorations: v => v.decorations\n});\nconst defaultTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-selectionMatch\": { backgroundColor: \"#99ff7780\" },\n    \".cm-searchMatch .cm-selectionMatch\": { backgroundColor: \"transparent\" }\n});\n// Select the words around the cursors.\nconst selectWord = ({ state, dispatch }) => {\n    let { selection } = state;\n    let newSel = EditorSelection.create(selection.ranges.map(range => state.wordAt(range.head) || EditorSelection.cursor(range.head)), selection.mainIndex);\n    if (newSel.eq(selection))\n        return false;\n    dispatch(state.update({ selection: newSel }));\n    return true;\n};\n// Find next occurrence of query relative to last cursor. Wrap around\n// the document if there are no more matches.\nfunction findNextOccurrence(state, query) {\n    let { main, ranges } = state.selection;\n    let word = state.wordAt(main.head), fullWord = word && word.from == main.from && word.to == main.to;\n    for (let cycled = false, cursor = new SearchCursor(state.doc, query, ranges[ranges.length - 1].to);;) {\n        cursor.next();\n        if (cursor.done) {\n            if (cycled)\n                return null;\n            cursor = new SearchCursor(state.doc, query, 0, Math.max(0, ranges[ranges.length - 1].from - 1));\n            cycled = true;\n        }\n        else {\n            if (cycled && ranges.some(r => r.from == cursor.value.from))\n                continue;\n            if (fullWord) {\n                let word = state.wordAt(cursor.value.from);\n                if (!word || word.from != cursor.value.from || word.to != cursor.value.to)\n                    continue;\n            }\n            return cursor.value;\n        }\n    }\n}\n/**\nSelect next occurrence of the current selection. Expand selection\nto the surrounding word when the selection is empty.\n*/\nconst selectNextOccurrence = ({ state, dispatch }) => {\n    let { ranges } = state.selection;\n    if (ranges.some(sel => sel.from === sel.to))\n        return selectWord({ state, dispatch });\n    let searchedText = state.sliceDoc(ranges[0].from, ranges[0].to);\n    if (state.selection.ranges.some(r => state.sliceDoc(r.from, r.to) != searchedText))\n        return false;\n    let range = findNextOccurrence(state, searchedText);\n    if (!range)\n        return false;\n    dispatch(state.update({\n        selection: state.selection.addRange(EditorSelection.range(range.from, range.to), false),\n        effects: EditorView.scrollIntoView(range.to)\n    }));\n    return true;\n};\n\nconst searchConfigFacet = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            top: false,\n            caseSensitive: false,\n            literal: false,\n            regexp: false,\n            wholeWord: false,\n            createPanel: view => new SearchPanel(view),\n            scrollToMatch: range => EditorView.scrollIntoView(range)\n        });\n    }\n});\n/**\nAdd search state to the editor configuration, and optionally\nconfigure the search extension.\n([`openSearchPanel`](https://codemirror.net/6/docs/ref/#search.openSearchPanel) will automatically\nenable this if it isn't already on).\n*/\nfunction search(config) {\n    return config ? [searchConfigFacet.of(config), searchExtensions] : searchExtensions;\n}\n/**\nA search query. Part of the editor's search state.\n*/\nclass SearchQuery {\n    /**\n    Create a query object.\n    */\n    constructor(config) {\n        this.search = config.search;\n        this.caseSensitive = !!config.caseSensitive;\n        this.literal = !!config.literal;\n        this.regexp = !!config.regexp;\n        this.replace = config.replace || \"\";\n        this.valid = !!this.search && (!this.regexp || validRegExp(this.search));\n        this.unquoted = this.unquote(this.search);\n        this.wholeWord = !!config.wholeWord;\n    }\n    /**\n    @internal\n    */\n    unquote(text) {\n        return this.literal ? text :\n            text.replace(/\\\\([nrt\\\\])/g, (_, ch) => ch == \"n\" ? \"\\n\" : ch == \"r\" ? \"\\r\" : ch == \"t\" ? \"\\t\" : \"\\\\\");\n    }\n    /**\n    Compare this query to another query.\n    */\n    eq(other) {\n        return this.search == other.search && this.replace == other.replace &&\n            this.caseSensitive == other.caseSensitive && this.regexp == other.regexp &&\n            this.wholeWord == other.wholeWord;\n    }\n    /**\n    @internal\n    */\n    create() {\n        return this.regexp ? new RegExpQuery(this) : new StringQuery(this);\n    }\n    /**\n    Get a search cursor for this query, searching through the given\n    range in the given state.\n    */\n    getCursor(state, from = 0, to) {\n        let st = state.doc ? state : EditorState.create({ doc: state });\n        if (to == null)\n            to = st.doc.length;\n        return this.regexp ? regexpCursor(this, st, from, to) : stringCursor(this, st, from, to);\n    }\n}\nclass QueryType {\n    constructor(spec) {\n        this.spec = spec;\n    }\n}\nfunction stringCursor(spec, state, from, to) {\n    return new SearchCursor(state.doc, spec.unquoted, from, to, spec.caseSensitive ? undefined : x => x.toLowerCase(), spec.wholeWord ? stringWordTest(state.doc, state.charCategorizer(state.selection.main.head)) : undefined);\n}\nfunction stringWordTest(doc, categorizer) {\n    return (from, to, buf, bufPos) => {\n        if (bufPos > from || bufPos + buf.length < to) {\n            bufPos = Math.max(0, from - 2);\n            buf = doc.sliceString(bufPos, Math.min(doc.length, to + 2));\n        }\n        return (categorizer(charBefore(buf, from - bufPos)) != CharCategory.Word ||\n            categorizer(charAfter(buf, from - bufPos)) != CharCategory.Word) &&\n            (categorizer(charAfter(buf, to - bufPos)) != CharCategory.Word ||\n                categorizer(charBefore(buf, to - bufPos)) != CharCategory.Word);\n    };\n}\nclass StringQuery extends QueryType {\n    constructor(spec) {\n        super(spec);\n    }\n    nextMatch(state, curFrom, curTo) {\n        let cursor = stringCursor(this.spec, state, curTo, state.doc.length).nextOverlapping();\n        if (cursor.done) {\n            let end = Math.min(state.doc.length, curFrom + this.spec.unquoted.length);\n            cursor = stringCursor(this.spec, state, 0, end).nextOverlapping();\n        }\n        return cursor.done || cursor.value.from == curFrom && cursor.value.to == curTo ? null : cursor.value;\n    }\n    // Searching in reverse is, rather than implementing an inverted search\n    // cursor, done by scanning chunk after chunk forward.\n    prevMatchInRange(state, from, to) {\n        for (let pos = to;;) {\n            let start = Math.max(from, pos - 10000 /* FindPrev.ChunkSize */ - this.spec.unquoted.length);\n            let cursor = stringCursor(this.spec, state, start, pos), range = null;\n            while (!cursor.nextOverlapping().done)\n                range = cursor.value;\n            if (range)\n                return range;\n            if (start == from)\n                return null;\n            pos -= 10000 /* FindPrev.ChunkSize */;\n        }\n    }\n    prevMatch(state, curFrom, curTo) {\n        let found = this.prevMatchInRange(state, 0, curFrom);\n        if (!found)\n            found = this.prevMatchInRange(state, Math.max(0, curTo - this.spec.unquoted.length), state.doc.length);\n        return found && (found.from != curFrom || found.to != curTo) ? found : null;\n    }\n    getReplacement(_result) { return this.spec.unquote(this.spec.replace); }\n    matchAll(state, limit) {\n        let cursor = stringCursor(this.spec, state, 0, state.doc.length), ranges = [];\n        while (!cursor.next().done) {\n            if (ranges.length >= limit)\n                return null;\n            ranges.push(cursor.value);\n        }\n        return ranges;\n    }\n    highlight(state, from, to, add) {\n        let cursor = stringCursor(this.spec, state, Math.max(0, from - this.spec.unquoted.length), Math.min(to + this.spec.unquoted.length, state.doc.length));\n        while (!cursor.next().done)\n            add(cursor.value.from, cursor.value.to);\n    }\n}\nfunction regexpCursor(spec, state, from, to) {\n    return new RegExpCursor(state.doc, spec.search, {\n        ignoreCase: !spec.caseSensitive,\n        test: spec.wholeWord ? regexpWordTest(state.charCategorizer(state.selection.main.head)) : undefined\n    }, from, to);\n}\nfunction charBefore(str, index) {\n    return str.slice(findClusterBreak(str, index, false), index);\n}\nfunction charAfter(str, index) {\n    return str.slice(index, findClusterBreak(str, index));\n}\nfunction regexpWordTest(categorizer) {\n    return (_from, _to, match) => !match[0].length ||\n        (categorizer(charBefore(match.input, match.index)) != CharCategory.Word ||\n            categorizer(charAfter(match.input, match.index)) != CharCategory.Word) &&\n            (categorizer(charAfter(match.input, match.index + match[0].length)) != CharCategory.Word ||\n                categorizer(charBefore(match.input, match.index + match[0].length)) != CharCategory.Word);\n}\nclass RegExpQuery extends QueryType {\n    nextMatch(state, curFrom, curTo) {\n        let cursor = regexpCursor(this.spec, state, curTo, state.doc.length).next();\n        if (cursor.done)\n            cursor = regexpCursor(this.spec, state, 0, curFrom).next();\n        return cursor.done ? null : cursor.value;\n    }\n    prevMatchInRange(state, from, to) {\n        for (let size = 1;; size++) {\n            let start = Math.max(from, to - size * 10000 /* FindPrev.ChunkSize */);\n            let cursor = regexpCursor(this.spec, state, start, to), range = null;\n            while (!cursor.next().done)\n                range = cursor.value;\n            if (range && (start == from || range.from > start + 10))\n                return range;\n            if (start == from)\n                return null;\n        }\n    }\n    prevMatch(state, curFrom, curTo) {\n        return this.prevMatchInRange(state, 0, curFrom) ||\n            this.prevMatchInRange(state, curTo, state.doc.length);\n    }\n    getReplacement(result) {\n        return this.spec.unquote(this.spec.replace).replace(/\\$([$&]|\\d+)/g, (m, i) => {\n            if (i == \"&\")\n                return result.match[0];\n            if (i == \"$\")\n                return \"$\";\n            for (let l = i.length; l > 0; l--) {\n                let n = +i.slice(0, l);\n                if (n > 0 && n < result.match.length)\n                    return result.match[n] + i.slice(l);\n            }\n            return m;\n        });\n    }\n    matchAll(state, limit) {\n        let cursor = regexpCursor(this.spec, state, 0, state.doc.length), ranges = [];\n        while (!cursor.next().done) {\n            if (ranges.length >= limit)\n                return null;\n            ranges.push(cursor.value);\n        }\n        return ranges;\n    }\n    highlight(state, from, to, add) {\n        let cursor = regexpCursor(this.spec, state, Math.max(0, from - 250 /* RegExp.HighlightMargin */), Math.min(to + 250 /* RegExp.HighlightMargin */, state.doc.length));\n        while (!cursor.next().done)\n            add(cursor.value.from, cursor.value.to);\n    }\n}\n/**\nA state effect that updates the current search query. Note that\nthis only has an effect if the search state has been initialized\n(by including [`search`](https://codemirror.net/6/docs/ref/#search.search) in your configuration or\nby running [`openSearchPanel`](https://codemirror.net/6/docs/ref/#search.openSearchPanel) at least\nonce).\n*/\nconst setSearchQuery = /*@__PURE__*/StateEffect.define();\nconst togglePanel = /*@__PURE__*/StateEffect.define();\nconst searchState = /*@__PURE__*/StateField.define({\n    create(state) {\n        return new SearchState(defaultQuery(state).create(), null);\n    },\n    update(value, tr) {\n        for (let effect of tr.effects) {\n            if (effect.is(setSearchQuery))\n                value = new SearchState(effect.value.create(), value.panel);\n            else if (effect.is(togglePanel))\n                value = new SearchState(value.query, effect.value ? createSearchPanel : null);\n        }\n        return value;\n    },\n    provide: f => showPanel.from(f, val => val.panel)\n});\n/**\nGet the current search query from an editor state.\n*/\nfunction getSearchQuery(state) {\n    let curState = state.field(searchState, false);\n    return curState ? curState.query.spec : defaultQuery(state);\n}\n/**\nQuery whether the search panel is open in the given editor state.\n*/\nfunction searchPanelOpen(state) {\n    var _a;\n    return ((_a = state.field(searchState, false)) === null || _a === void 0 ? void 0 : _a.panel) != null;\n}\nclass SearchState {\n    constructor(query, panel) {\n        this.query = query;\n        this.panel = panel;\n    }\n}\nconst matchMark = /*@__PURE__*/Decoration.mark({ class: \"cm-searchMatch\" }), selectedMatchMark = /*@__PURE__*/Decoration.mark({ class: \"cm-searchMatch cm-searchMatch-selected\" });\nconst searchHighlighter = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.decorations = this.highlight(view.state.field(searchState));\n    }\n    update(update) {\n        let state = update.state.field(searchState);\n        if (state != update.startState.field(searchState) || update.docChanged || update.selectionSet || update.viewportChanged)\n            this.decorations = this.highlight(state);\n    }\n    highlight({ query, panel }) {\n        if (!panel || !query.spec.valid)\n            return Decoration.none;\n        let { view } = this;\n        let builder = new RangeSetBuilder();\n        for (let i = 0, ranges = view.visibleRanges, l = ranges.length; i < l; i++) {\n            let { from, to } = ranges[i];\n            while (i < l - 1 && to > ranges[i + 1].from - 2 * 250 /* RegExp.HighlightMargin */)\n                to = ranges[++i].to;\n            query.highlight(view.state, from, to, (from, to) => {\n                let selected = view.state.selection.ranges.some(r => r.from == from && r.to == to);\n                builder.add(from, to, selected ? selectedMatchMark : matchMark);\n            });\n        }\n        return builder.finish();\n    }\n}, {\n    decorations: v => v.decorations\n});\nfunction searchCommand(f) {\n    return view => {\n        let state = view.state.field(searchState, false);\n        return state && state.query.spec.valid ? f(view, state) : openSearchPanel(view);\n    };\n}\n/**\nOpen the search panel if it isn't already open, and move the\nselection to the first match after the current main selection.\nWill wrap around to the start of the document when it reaches the\nend.\n*/\nconst findNext = /*@__PURE__*/searchCommand((view, { query }) => {\n    let { to } = view.state.selection.main;\n    let next = query.nextMatch(view.state, to, to);\n    if (!next)\n        return false;\n    let selection = EditorSelection.single(next.from, next.to);\n    let config = view.state.facet(searchConfigFacet);\n    view.dispatch({\n        selection,\n        effects: [announceMatch(view, next), config.scrollToMatch(selection.main, view)],\n        userEvent: \"select.search\"\n    });\n    selectSearchInput(view);\n    return true;\n});\n/**\nMove the selection to the previous instance of the search query,\nbefore the current main selection. Will wrap past the start\nof the document to start searching at the end again.\n*/\nconst findPrevious = /*@__PURE__*/searchCommand((view, { query }) => {\n    let { state } = view, { from } = state.selection.main;\n    let prev = query.prevMatch(state, from, from);\n    if (!prev)\n        return false;\n    let selection = EditorSelection.single(prev.from, prev.to);\n    let config = view.state.facet(searchConfigFacet);\n    view.dispatch({\n        selection,\n        effects: [announceMatch(view, prev), config.scrollToMatch(selection.main, view)],\n        userEvent: \"select.search\"\n    });\n    selectSearchInput(view);\n    return true;\n});\n/**\nSelect all instances of the search query.\n*/\nconst selectMatches = /*@__PURE__*/searchCommand((view, { query }) => {\n    let ranges = query.matchAll(view.state, 1000);\n    if (!ranges || !ranges.length)\n        return false;\n    view.dispatch({\n        selection: EditorSelection.create(ranges.map(r => EditorSelection.range(r.from, r.to))),\n        userEvent: \"select.search.matches\"\n    });\n    return true;\n});\n/**\nSelect all instances of the currently selected text.\n*/\nconst selectSelectionMatches = ({ state, dispatch }) => {\n    let sel = state.selection;\n    if (sel.ranges.length > 1 || sel.main.empty)\n        return false;\n    let { from, to } = sel.main;\n    let ranges = [], main = 0;\n    for (let cur = new SearchCursor(state.doc, state.sliceDoc(from, to)); !cur.next().done;) {\n        if (ranges.length > 1000)\n            return false;\n        if (cur.value.from == from)\n            main = ranges.length;\n        ranges.push(EditorSelection.range(cur.value.from, cur.value.to));\n    }\n    dispatch(state.update({\n        selection: EditorSelection.create(ranges, main),\n        userEvent: \"select.search.matches\"\n    }));\n    return true;\n};\n/**\nReplace the current match of the search query.\n*/\nconst replaceNext = /*@__PURE__*/searchCommand((view, { query }) => {\n    let { state } = view, { from, to } = state.selection.main;\n    if (state.readOnly)\n        return false;\n    let match = query.nextMatch(state, from, from);\n    if (!match)\n        return false;\n    let next = match;\n    let changes = [], selection, replacement;\n    let effects = [];\n    if (next.from == from && next.to == to) {\n        replacement = state.toText(query.getReplacement(next));\n        changes.push({ from: next.from, to: next.to, insert: replacement });\n        next = query.nextMatch(state, next.from, next.to);\n        effects.push(EditorView.announce.of(state.phrase(\"replaced match on line $\", state.doc.lineAt(from).number) + \".\"));\n    }\n    let changeSet = view.state.changes(changes);\n    if (next) {\n        selection = EditorSelection.single(next.from, next.to).map(changeSet);\n        effects.push(announceMatch(view, next));\n        effects.push(state.facet(searchConfigFacet).scrollToMatch(selection.main, view));\n    }\n    view.dispatch({\n        changes: changeSet,\n        selection,\n        effects,\n        userEvent: \"input.replace\"\n    });\n    return true;\n});\n/**\nReplace all instances of the search query with the given\nreplacement.\n*/\nconst replaceAll = /*@__PURE__*/searchCommand((view, { query }) => {\n    if (view.state.readOnly)\n        return false;\n    let changes = query.matchAll(view.state, 1e9).map(match => {\n        let { from, to } = match;\n        return { from, to, insert: query.getReplacement(match) };\n    });\n    if (!changes.length)\n        return false;\n    let announceText = view.state.phrase(\"replaced $ matches\", changes.length) + \".\";\n    view.dispatch({\n        changes,\n        effects: EditorView.announce.of(announceText),\n        userEvent: \"input.replace.all\"\n    });\n    return true;\n});\nfunction createSearchPanel(view) {\n    return view.state.facet(searchConfigFacet).createPanel(view);\n}\nfunction defaultQuery(state, fallback) {\n    var _a, _b, _c, _d, _e;\n    let sel = state.selection.main;\n    let selText = sel.empty || sel.to > sel.from + 100 ? \"\" : state.sliceDoc(sel.from, sel.to);\n    if (fallback && !selText)\n        return fallback;\n    let config = state.facet(searchConfigFacet);\n    return new SearchQuery({\n        search: ((_a = fallback === null || fallback === void 0 ? void 0 : fallback.literal) !== null && _a !== void 0 ? _a : config.literal) ? selText : selText.replace(/\\n/g, \"\\\\n\"),\n        caseSensitive: (_b = fallback === null || fallback === void 0 ? void 0 : fallback.caseSensitive) !== null && _b !== void 0 ? _b : config.caseSensitive,\n        literal: (_c = fallback === null || fallback === void 0 ? void 0 : fallback.literal) !== null && _c !== void 0 ? _c : config.literal,\n        regexp: (_d = fallback === null || fallback === void 0 ? void 0 : fallback.regexp) !== null && _d !== void 0 ? _d : config.regexp,\n        wholeWord: (_e = fallback === null || fallback === void 0 ? void 0 : fallback.wholeWord) !== null && _e !== void 0 ? _e : config.wholeWord\n    });\n}\nfunction getSearchInput(view) {\n    let panel = getPanel(view, createSearchPanel);\n    return panel && panel.dom.querySelector(\"[main-field]\");\n}\nfunction selectSearchInput(view) {\n    let input = getSearchInput(view);\n    if (input && input == view.root.activeElement)\n        input.select();\n}\n/**\nMake sure the search panel is open and focused.\n*/\nconst openSearchPanel = view => {\n    let state = view.state.field(searchState, false);\n    if (state && state.panel) {\n        let searchInput = getSearchInput(view);\n        if (searchInput && searchInput != view.root.activeElement) {\n            let query = defaultQuery(view.state, state.query.spec);\n            if (query.valid)\n                view.dispatch({ effects: setSearchQuery.of(query) });\n            searchInput.focus();\n            searchInput.select();\n        }\n    }\n    else {\n        view.dispatch({ effects: [\n                togglePanel.of(true),\n                state ? setSearchQuery.of(defaultQuery(view.state, state.query.spec)) : StateEffect.appendConfig.of(searchExtensions)\n            ] });\n    }\n    return true;\n};\n/**\nClose the search panel.\n*/\nconst closeSearchPanel = view => {\n    let state = view.state.field(searchState, false);\n    if (!state || !state.panel)\n        return false;\n    let panel = getPanel(view, createSearchPanel);\n    if (panel && panel.dom.contains(view.root.activeElement))\n        view.focus();\n    view.dispatch({ effects: togglePanel.of(false) });\n    return true;\n};\n/**\nDefault search-related key bindings.\n\n - Mod-f: [`openSearchPanel`](https://codemirror.net/6/docs/ref/#search.openSearchPanel)\n - F3, Mod-g: [`findNext`](https://codemirror.net/6/docs/ref/#search.findNext)\n - Shift-F3, Shift-Mod-g: [`findPrevious`](https://codemirror.net/6/docs/ref/#search.findPrevious)\n - Mod-Alt-g: [`gotoLine`](https://codemirror.net/6/docs/ref/#search.gotoLine)\n - Mod-d: [`selectNextOccurrence`](https://codemirror.net/6/docs/ref/#search.selectNextOccurrence)\n*/\nconst searchKeymap = [\n    { key: \"Mod-f\", run: openSearchPanel, scope: \"editor search-panel\" },\n    { key: \"F3\", run: findNext, shift: findPrevious, scope: \"editor search-panel\", preventDefault: true },\n    { key: \"Mod-g\", run: findNext, shift: findPrevious, scope: \"editor search-panel\", preventDefault: true },\n    { key: \"Escape\", run: closeSearchPanel, scope: \"editor search-panel\" },\n    { key: \"Mod-Shift-l\", run: selectSelectionMatches },\n    { key: \"Mod-Alt-g\", run: gotoLine },\n    { key: \"Mod-d\", run: selectNextOccurrence, preventDefault: true },\n];\nclass SearchPanel {\n    constructor(view) {\n        this.view = view;\n        let query = this.query = view.state.field(searchState).query.spec;\n        this.commit = this.commit.bind(this);\n        this.searchField = elt(\"input\", {\n            value: query.search,\n            placeholder: phrase(view, \"Find\"),\n            \"aria-label\": phrase(view, \"Find\"),\n            class: \"cm-textfield\",\n            name: \"search\",\n            form: \"\",\n            \"main-field\": \"true\",\n            onchange: this.commit,\n            onkeyup: this.commit\n        });\n        this.replaceField = elt(\"input\", {\n            value: query.replace,\n            placeholder: phrase(view, \"Replace\"),\n            \"aria-label\": phrase(view, \"Replace\"),\n            class: \"cm-textfield\",\n            name: \"replace\",\n            form: \"\",\n            onchange: this.commit,\n            onkeyup: this.commit\n        });\n        this.caseField = elt(\"input\", {\n            type: \"checkbox\",\n            name: \"case\",\n            form: \"\",\n            checked: query.caseSensitive,\n            onchange: this.commit\n        });\n        this.reField = elt(\"input\", {\n            type: \"checkbox\",\n            name: \"re\",\n            form: \"\",\n            checked: query.regexp,\n            onchange: this.commit\n        });\n        this.wordField = elt(\"input\", {\n            type: \"checkbox\",\n            name: \"word\",\n            form: \"\",\n            checked: query.wholeWord,\n            onchange: this.commit\n        });\n        function button(name, onclick, content) {\n            return elt(\"button\", { class: \"cm-button\", name, onclick, type: \"button\" }, content);\n        }\n        this.dom = elt(\"div\", { onkeydown: (e) => this.keydown(e), class: \"cm-search\" }, [\n            this.searchField,\n            button(\"next\", () => findNext(view), [phrase(view, \"next\")]),\n            button(\"prev\", () => findPrevious(view), [phrase(view, \"previous\")]),\n            button(\"select\", () => selectMatches(view), [phrase(view, \"all\")]),\n            elt(\"label\", null, [this.caseField, phrase(view, \"match case\")]),\n            elt(\"label\", null, [this.reField, phrase(view, \"regexp\")]),\n            elt(\"label\", null, [this.wordField, phrase(view, \"by word\")]),\n            ...view.state.readOnly ? [] : [\n                elt(\"br\"),\n                this.replaceField,\n                button(\"replace\", () => replaceNext(view), [phrase(view, \"replace\")]),\n                button(\"replaceAll\", () => replaceAll(view), [phrase(view, \"replace all\")])\n            ],\n            elt(\"button\", {\n                name: \"close\",\n                onclick: () => closeSearchPanel(view),\n                \"aria-label\": phrase(view, \"close\"),\n                type: \"button\"\n            }, [\"×\"])\n        ]);\n    }\n    commit() {\n        let query = new SearchQuery({\n            search: this.searchField.value,\n            caseSensitive: this.caseField.checked,\n            regexp: this.reField.checked,\n            wholeWord: this.wordField.checked,\n            replace: this.replaceField.value,\n        });\n        if (!query.eq(this.query)) {\n            this.query = query;\n            this.view.dispatch({ effects: setSearchQuery.of(query) });\n        }\n    }\n    keydown(e) {\n        if (runScopeHandlers(this.view, e, \"search-panel\")) {\n            e.preventDefault();\n        }\n        else if (e.keyCode == 13 && e.target == this.searchField) {\n            e.preventDefault();\n            (e.shiftKey ? findPrevious : findNext)(this.view);\n        }\n        else if (e.keyCode == 13 && e.target == this.replaceField) {\n            e.preventDefault();\n            replaceNext(this.view);\n        }\n    }\n    update(update) {\n        for (let tr of update.transactions)\n            for (let effect of tr.effects) {\n                if (effect.is(setSearchQuery) && !effect.value.eq(this.query))\n                    this.setQuery(effect.value);\n            }\n    }\n    setQuery(query) {\n        this.query = query;\n        this.searchField.value = query.search;\n        this.replaceField.value = query.replace;\n        this.caseField.checked = query.caseSensitive;\n        this.reField.checked = query.regexp;\n        this.wordField.checked = query.wholeWord;\n    }\n    mount() {\n        this.searchField.select();\n    }\n    get pos() { return 80; }\n    get top() { return this.view.state.facet(searchConfigFacet).top; }\n}\nfunction phrase(view, phrase) { return view.state.phrase(phrase); }\nconst AnnounceMargin = 30;\nconst Break = /[\\s\\.,:;?!]/;\nfunction announceMatch(view, { from, to }) {\n    let line = view.state.doc.lineAt(from), lineEnd = view.state.doc.lineAt(to).to;\n    let start = Math.max(line.from, from - AnnounceMargin), end = Math.min(lineEnd, to + AnnounceMargin);\n    let text = view.state.sliceDoc(start, end);\n    if (start != line.from) {\n        for (let i = 0; i < AnnounceMargin; i++)\n            if (!Break.test(text[i + 1]) && Break.test(text[i])) {\n                text = text.slice(i);\n                break;\n            }\n    }\n    if (end != lineEnd) {\n        for (let i = text.length - 1; i > text.length - AnnounceMargin; i--)\n            if (!Break.test(text[i - 1]) && Break.test(text[i])) {\n                text = text.slice(0, i);\n                break;\n            }\n    }\n    return EditorView.announce.of(`${view.state.phrase(\"current match\")}. ${text} ${view.state.phrase(\"on line\")} ${line.number}.`);\n}\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-panel.cm-search\": {\n        padding: \"2px 6px 4px\",\n        position: \"relative\",\n        \"& [name=close]\": {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"4px\",\n            backgroundColor: \"inherit\",\n            border: \"none\",\n            font: \"inherit\",\n            padding: 0,\n            margin: 0\n        },\n        \"& input, & button, & label\": {\n            margin: \".2em .6em .2em 0\"\n        },\n        \"& input[type=checkbox]\": {\n            marginRight: \".2em\"\n        },\n        \"& label\": {\n            fontSize: \"80%\",\n            whiteSpace: \"pre\"\n        }\n    },\n    \"&light .cm-searchMatch\": { backgroundColor: \"#ffff0054\" },\n    \"&dark .cm-searchMatch\": { backgroundColor: \"#00ffff8a\" },\n    \"&light .cm-searchMatch-selected\": { backgroundColor: \"#ff6a0054\" },\n    \"&dark .cm-searchMatch-selected\": { backgroundColor: \"#ff00ff8a\" }\n});\nconst searchExtensions = [\n    searchState,\n    /*@__PURE__*/Prec.low(searchHighlighter),\n    baseTheme\n];\n\nexport { RegExpCursor, SearchCursor, SearchQuery, closeSearchPanel, findNext, findPrevious, getSearchQuery, gotoLine, highlightSelectionMatches, openSearchPanel, replaceAll, replaceNext, search, searchKeymap, searchPanelOpen, selectMatches, selectNextOccurrence, selectSelectionMatches, setSearchQuery };\n","import { Decoration, showPanel, EditorView, ViewPlugin, gutter, showTooltip, hoverTooltip, getPanel, logException, WidgetType, GutterMarker } from '@codemirror/view';\nimport { StateEffect, StateField, Facet, combineConfig, RangeSet, RangeSetBuilder } from '@codemirror/state';\nimport elt from 'crelt';\n\nclass SelectedDiagnostic {\n    constructor(from, to, diagnostic) {\n        this.from = from;\n        this.to = to;\n        this.diagnostic = diagnostic;\n    }\n}\nclass LintState {\n    constructor(diagnostics, panel, selected) {\n        this.diagnostics = diagnostics;\n        this.panel = panel;\n        this.selected = selected;\n    }\n    static init(diagnostics, panel, state) {\n        // Filter the list of diagnostics for which to create markers\n        let diagnosticFilter = state.facet(lintConfig).markerFilter;\n        if (diagnosticFilter)\n            diagnostics = diagnosticFilter(diagnostics, state);\n        let sorted = diagnostics.slice().sort((a, b) => a.from - b.from || a.to - b.to);\n        let deco = new RangeSetBuilder(), active = [], pos = 0;\n        for (let i = 0;;) {\n            let next = i == sorted.length ? null : sorted[i];\n            if (!next && !active.length)\n                break;\n            let from, to;\n            if (active.length) {\n                from = pos;\n                to = active.reduce((p, d) => Math.min(p, d.to), next && next.from > from ? next.from : 1e8);\n            }\n            else {\n                from = next.from;\n                to = next.to;\n                active.push(next);\n                i++;\n            }\n            while (i < sorted.length) {\n                let next = sorted[i];\n                if (next.from == from && (next.to > next.from || next.to == from)) {\n                    active.push(next);\n                    i++;\n                    to = Math.min(next.to, to);\n                }\n                else {\n                    to = Math.min(next.from, to);\n                    break;\n                }\n            }\n            let sev = maxSeverity(active);\n            if (active.some(d => d.from == d.to || (d.from == d.to - 1 && state.doc.lineAt(d.from).to == d.from))) {\n                deco.add(from, from, Decoration.widget({\n                    widget: new DiagnosticWidget(sev),\n                    diagnostics: active.slice()\n                }));\n            }\n            else {\n                let markClass = active.reduce((c, d) => d.markClass ? c + \" \" + d.markClass : c, \"\");\n                deco.add(from, to, Decoration.mark({\n                    class: \"cm-lintRange cm-lintRange-\" + sev + markClass,\n                    diagnostics: active.slice(),\n                    inclusiveEnd: active.some(a => a.to > to)\n                }));\n            }\n            pos = to;\n            for (let i = 0; i < active.length; i++)\n                if (active[i].to <= pos)\n                    active.splice(i--, 1);\n        }\n        let set = deco.finish();\n        return new LintState(set, panel, findDiagnostic(set));\n    }\n}\nfunction findDiagnostic(diagnostics, diagnostic = null, after = 0) {\n    let found = null;\n    diagnostics.between(after, 1e9, (from, to, { spec }) => {\n        if (diagnostic && spec.diagnostics.indexOf(diagnostic) < 0)\n            return;\n        if (!found)\n            found = new SelectedDiagnostic(from, to, diagnostic || spec.diagnostics[0]);\n        else if (spec.diagnostics.indexOf(found.diagnostic) < 0)\n            return false;\n        else\n            found = new SelectedDiagnostic(found.from, to, found.diagnostic);\n    });\n    return found;\n}\nfunction hideTooltip(tr, tooltip) {\n    let from = tooltip.pos, to = tooltip.end || from;\n    let result = tr.state.facet(lintConfig).hideOn(tr, from, to);\n    if (result != null)\n        return result;\n    let line = tr.startState.doc.lineAt(tooltip.pos);\n    return !!(tr.effects.some(e => e.is(setDiagnosticsEffect)) || tr.changes.touchesRange(line.from, Math.max(line.to, to)));\n}\nfunction maybeEnableLint(state, effects) {\n    return state.field(lintState, false) ? effects : effects.concat(StateEffect.appendConfig.of(lintExtensions));\n}\n/**\nReturns a transaction spec which updates the current set of\ndiagnostics, and enables the lint extension if if wasn't already\nactive.\n*/\nfunction setDiagnostics(state, diagnostics) {\n    return {\n        effects: maybeEnableLint(state, [setDiagnosticsEffect.of(diagnostics)])\n    };\n}\n/**\nThe state effect that updates the set of active diagnostics. Can\nbe useful when writing an extension that needs to track these.\n*/\nconst setDiagnosticsEffect = /*@__PURE__*/StateEffect.define();\nconst togglePanel = /*@__PURE__*/StateEffect.define();\nconst movePanelSelection = /*@__PURE__*/StateEffect.define();\nconst lintState = /*@__PURE__*/StateField.define({\n    create() {\n        return new LintState(Decoration.none, null, null);\n    },\n    update(value, tr) {\n        if (tr.docChanged && value.diagnostics.size) {\n            let mapped = value.diagnostics.map(tr.changes), selected = null, panel = value.panel;\n            if (value.selected) {\n                let selPos = tr.changes.mapPos(value.selected.from, 1);\n                selected = findDiagnostic(mapped, value.selected.diagnostic, selPos) || findDiagnostic(mapped, null, selPos);\n            }\n            if (!mapped.size && panel && tr.state.facet(lintConfig).autoPanel)\n                panel = null;\n            value = new LintState(mapped, panel, selected);\n        }\n        for (let effect of tr.effects) {\n            if (effect.is(setDiagnosticsEffect)) {\n                let panel = !tr.state.facet(lintConfig).autoPanel ? value.panel : effect.value.length ? LintPanel.open : null;\n                value = LintState.init(effect.value, panel, tr.state);\n            }\n            else if (effect.is(togglePanel)) {\n                value = new LintState(value.diagnostics, effect.value ? LintPanel.open : null, value.selected);\n            }\n            else if (effect.is(movePanelSelection)) {\n                value = new LintState(value.diagnostics, value.panel, effect.value);\n            }\n        }\n        return value;\n    },\n    provide: f => [showPanel.from(f, val => val.panel),\n        EditorView.decorations.from(f, s => s.diagnostics)]\n});\n/**\nReturns the number of active lint diagnostics in the given state.\n*/\nfunction diagnosticCount(state) {\n    let lint = state.field(lintState, false);\n    return lint ? lint.diagnostics.size : 0;\n}\nconst activeMark = /*@__PURE__*/Decoration.mark({ class: \"cm-lintRange cm-lintRange-active\" });\nfunction lintTooltip(view, pos, side) {\n    let { diagnostics } = view.state.field(lintState);\n    let found, start = -1, end = -1;\n    diagnostics.between(pos - (side < 0 ? 1 : 0), pos + (side > 0 ? 1 : 0), (from, to, { spec }) => {\n        if (pos >= from && pos <= to &&\n            (from == to || ((pos > from || side > 0) && (pos < to || side < 0)))) {\n            found = spec.diagnostics;\n            start = from;\n            end = to;\n            return false;\n        }\n    });\n    let diagnosticFilter = view.state.facet(lintConfig).tooltipFilter;\n    if (found && diagnosticFilter)\n        found = diagnosticFilter(found, view.state);\n    if (!found)\n        return null;\n    return {\n        pos: start,\n        end: end,\n        above: view.state.doc.lineAt(start).to < end,\n        create() {\n            return { dom: diagnosticsTooltip(view, found) };\n        }\n    };\n}\nfunction diagnosticsTooltip(view, diagnostics) {\n    return elt(\"ul\", { class: \"cm-tooltip-lint\" }, diagnostics.map(d => renderDiagnostic(view, d, false)));\n}\n/**\nCommand to open and focus the lint panel.\n*/\nconst openLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        view.dispatch({ effects: maybeEnableLint(view.state, [togglePanel.of(true)]) });\n    let panel = getPanel(view, LintPanel.open);\n    if (panel)\n        panel.dom.querySelector(\".cm-panel-lint ul\").focus();\n    return true;\n};\n/**\nCommand to close the lint panel, when open.\n*/\nconst closeLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        return false;\n    view.dispatch({ effects: togglePanel.of(false) });\n    return true;\n};\n/**\nMove the selection to the next diagnostic.\n*/\nconst nextDiagnostic = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field)\n        return false;\n    let sel = view.state.selection.main, next = field.diagnostics.iter(sel.to + 1);\n    if (!next.value) {\n        next = field.diagnostics.iter(0);\n        if (!next.value || next.from == sel.from && next.to == sel.to)\n            return false;\n    }\n    view.dispatch({ selection: { anchor: next.from, head: next.to }, scrollIntoView: true });\n    return true;\n};\n/**\nMove the selection to the previous diagnostic.\n*/\nconst previousDiagnostic = (view) => {\n    let { state } = view, field = state.field(lintState, false);\n    if (!field)\n        return false;\n    let sel = state.selection.main;\n    let prevFrom, prevTo, lastFrom, lastTo;\n    field.diagnostics.between(0, state.doc.length, (from, to) => {\n        if (to < sel.to && (prevFrom == null || prevFrom < from)) {\n            prevFrom = from;\n            prevTo = to;\n        }\n        if (lastFrom == null || from > lastFrom) {\n            lastFrom = from;\n            lastTo = to;\n        }\n    });\n    if (lastFrom == null || prevFrom == null && lastFrom == sel.from)\n        return false;\n    view.dispatch({ selection: { anchor: prevFrom !== null && prevFrom !== void 0 ? prevFrom : lastFrom, head: prevTo !== null && prevTo !== void 0 ? prevTo : lastTo }, scrollIntoView: true });\n    return true;\n};\n/**\nA set of default key bindings for the lint functionality.\n\n- Ctrl-Shift-m (Cmd-Shift-m on macOS): [`openLintPanel`](https://codemirror.net/6/docs/ref/#lint.openLintPanel)\n- F8: [`nextDiagnostic`](https://codemirror.net/6/docs/ref/#lint.nextDiagnostic)\n*/\nconst lintKeymap = [\n    { key: \"Mod-Shift-m\", run: openLintPanel, preventDefault: true },\n    { key: \"F8\", run: nextDiagnostic }\n];\nconst lintPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.timeout = -1;\n        this.set = true;\n        let { delay } = view.state.facet(lintConfig);\n        this.lintTime = Date.now() + delay;\n        this.run = this.run.bind(this);\n        this.timeout = setTimeout(this.run, delay);\n    }\n    run() {\n        clearTimeout(this.timeout);\n        let now = Date.now();\n        if (now < this.lintTime - 10) {\n            this.timeout = setTimeout(this.run, this.lintTime - now);\n        }\n        else {\n            this.set = false;\n            let { state } = this.view, { sources } = state.facet(lintConfig);\n            if (sources.length)\n                batchResults(sources.map(s => Promise.resolve(s(this.view))), annotations => {\n                    if (this.view.state.doc == state.doc)\n                        this.view.dispatch(setDiagnostics(this.view.state, annotations.reduce((a, b) => a.concat(b))));\n                }, error => { logException(this.view.state, error); });\n        }\n    }\n    update(update) {\n        let config = update.state.facet(lintConfig);\n        if (update.docChanged || config != update.startState.facet(lintConfig) ||\n            config.needsRefresh && config.needsRefresh(update)) {\n            this.lintTime = Date.now() + config.delay;\n            if (!this.set) {\n                this.set = true;\n                this.timeout = setTimeout(this.run, config.delay);\n            }\n        }\n    }\n    force() {\n        if (this.set) {\n            this.lintTime = Date.now();\n            this.run();\n        }\n    }\n    destroy() {\n        clearTimeout(this.timeout);\n    }\n});\nfunction batchResults(promises, sink, error) {\n    let collected = [], timeout = -1;\n    for (let p of promises)\n        p.then(value => {\n            collected.push(value);\n            clearTimeout(timeout);\n            if (collected.length == promises.length)\n                sink(collected);\n            else\n                timeout = setTimeout(() => sink(collected), 200);\n        }, error);\n}\nconst lintConfig = /*@__PURE__*/Facet.define({\n    combine(input) {\n        return Object.assign({ sources: input.map(i => i.source).filter(x => x != null) }, combineConfig(input.map(i => i.config), {\n            delay: 750,\n            markerFilter: null,\n            tooltipFilter: null,\n            needsRefresh: null,\n            hideOn: () => null,\n        }, {\n            needsRefresh: (a, b) => !a ? b : !b ? a : u => a(u) || b(u)\n        }));\n    }\n});\n/**\nGiven a diagnostic source, this function returns an extension that\nenables linting with that source. It will be called whenever the\neditor is idle (after its content changed). If `null` is given as\nsource, this only configures the lint extension.\n*/\nfunction linter(source, config = {}) {\n    return [\n        lintConfig.of({ source, config }),\n        lintPlugin,\n        lintExtensions\n    ];\n}\n/**\nForces any linters [configured](https://codemirror.net/6/docs/ref/#lint.linter) to run when the\neditor is idle to run right away.\n*/\nfunction forceLinting(view) {\n    let plugin = view.plugin(lintPlugin);\n    if (plugin)\n        plugin.force();\n}\nfunction assignKeys(actions) {\n    let assigned = [];\n    if (actions)\n        actions: for (let { name } of actions) {\n            for (let i = 0; i < name.length; i++) {\n                let ch = name[i];\n                if (/[a-zA-Z]/.test(ch) && !assigned.some(c => c.toLowerCase() == ch.toLowerCase())) {\n                    assigned.push(ch);\n                    continue actions;\n                }\n            }\n            assigned.push(\"\");\n        }\n    return assigned;\n}\nfunction renderDiagnostic(view, diagnostic, inPanel) {\n    var _a;\n    let keys = inPanel ? assignKeys(diagnostic.actions) : [];\n    return elt(\"li\", { class: \"cm-diagnostic cm-diagnostic-\" + diagnostic.severity }, elt(\"span\", { class: \"cm-diagnosticText\" }, diagnostic.renderMessage ? diagnostic.renderMessage(view) : diagnostic.message), (_a = diagnostic.actions) === null || _a === void 0 ? void 0 : _a.map((action, i) => {\n        let fired = false, click = (e) => {\n            e.preventDefault();\n            if (fired)\n                return;\n            fired = true;\n            let found = findDiagnostic(view.state.field(lintState).diagnostics, diagnostic);\n            if (found)\n                action.apply(view, found.from, found.to);\n        };\n        let { name } = action, keyIndex = keys[i] ? name.indexOf(keys[i]) : -1;\n        let nameElt = keyIndex < 0 ? name : [name.slice(0, keyIndex),\n            elt(\"u\", name.slice(keyIndex, keyIndex + 1)),\n            name.slice(keyIndex + 1)];\n        return elt(\"button\", {\n            type: \"button\",\n            class: \"cm-diagnosticAction\",\n            onclick: click,\n            onmousedown: click,\n            \"aria-label\": ` Action: ${name}${keyIndex < 0 ? \"\" : ` (access key \"${keys[i]})\"`}.`\n        }, nameElt);\n    }), diagnostic.source && elt(\"div\", { class: \"cm-diagnosticSource\" }, diagnostic.source));\n}\nclass DiagnosticWidget extends WidgetType {\n    constructor(sev) {\n        super();\n        this.sev = sev;\n    }\n    eq(other) { return other.sev == this.sev; }\n    toDOM() {\n        return elt(\"span\", { class: \"cm-lintPoint cm-lintPoint-\" + this.sev });\n    }\n}\nclass PanelItem {\n    constructor(view, diagnostic) {\n        this.diagnostic = diagnostic;\n        this.id = \"item_\" + Math.floor(Math.random() * 0xffffffff).toString(16);\n        this.dom = renderDiagnostic(view, diagnostic, true);\n        this.dom.id = this.id;\n        this.dom.setAttribute(\"role\", \"option\");\n    }\n}\nclass LintPanel {\n    constructor(view) {\n        this.view = view;\n        this.items = [];\n        let onkeydown = (event) => {\n            if (event.keyCode == 27) { // Escape\n                closeLintPanel(this.view);\n                this.view.focus();\n            }\n            else if (event.keyCode == 38 || event.keyCode == 33) { // ArrowUp, PageUp\n                this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);\n            }\n            else if (event.keyCode == 40 || event.keyCode == 34) { // ArrowDown, PageDown\n                this.moveSelection((this.selectedIndex + 1) % this.items.length);\n            }\n            else if (event.keyCode == 36) { // Home\n                this.moveSelection(0);\n            }\n            else if (event.keyCode == 35) { // End\n                this.moveSelection(this.items.length - 1);\n            }\n            else if (event.keyCode == 13) { // Enter\n                this.view.focus();\n            }\n            else if (event.keyCode >= 65 && event.keyCode <= 90 && this.selectedIndex >= 0) { // A-Z\n                let { diagnostic } = this.items[this.selectedIndex], keys = assignKeys(diagnostic.actions);\n                for (let i = 0; i < keys.length; i++)\n                    if (keys[i].toUpperCase().charCodeAt(0) == event.keyCode) {\n                        let found = findDiagnostic(this.view.state.field(lintState).diagnostics, diagnostic);\n                        if (found)\n                            diagnostic.actions[i].apply(view, found.from, found.to);\n                    }\n            }\n            else {\n                return;\n            }\n            event.preventDefault();\n        };\n        let onclick = (event) => {\n            for (let i = 0; i < this.items.length; i++) {\n                if (this.items[i].dom.contains(event.target))\n                    this.moveSelection(i);\n            }\n        };\n        this.list = elt(\"ul\", {\n            tabIndex: 0,\n            role: \"listbox\",\n            \"aria-label\": this.view.state.phrase(\"Diagnostics\"),\n            onkeydown,\n            onclick\n        });\n        this.dom = elt(\"div\", { class: \"cm-panel-lint\" }, this.list, elt(\"button\", {\n            type: \"button\",\n            name: \"close\",\n            \"aria-label\": this.view.state.phrase(\"close\"),\n            onclick: () => closeLintPanel(this.view)\n        }, \"×\"));\n        this.update();\n    }\n    get selectedIndex() {\n        let selected = this.view.state.field(lintState).selected;\n        if (!selected)\n            return -1;\n        for (let i = 0; i < this.items.length; i++)\n            if (this.items[i].diagnostic == selected.diagnostic)\n                return i;\n        return -1;\n    }\n    update() {\n        let { diagnostics, selected } = this.view.state.field(lintState);\n        let i = 0, needsSync = false, newSelectedItem = null;\n        let seen = new Set();\n        diagnostics.between(0, this.view.state.doc.length, (_start, _end, { spec }) => {\n            for (let diagnostic of spec.diagnostics) {\n                if (seen.has(diagnostic))\n                    continue;\n                seen.add(diagnostic);\n                let found = -1, item;\n                for (let j = i; j < this.items.length; j++)\n                    if (this.items[j].diagnostic == diagnostic) {\n                        found = j;\n                        break;\n                    }\n                if (found < 0) {\n                    item = new PanelItem(this.view, diagnostic);\n                    this.items.splice(i, 0, item);\n                    needsSync = true;\n                }\n                else {\n                    item = this.items[found];\n                    if (found > i) {\n                        this.items.splice(i, found - i);\n                        needsSync = true;\n                    }\n                }\n                if (selected && item.diagnostic == selected.diagnostic) {\n                    if (!item.dom.hasAttribute(\"aria-selected\")) {\n                        item.dom.setAttribute(\"aria-selected\", \"true\");\n                        newSelectedItem = item;\n                    }\n                }\n                else if (item.dom.hasAttribute(\"aria-selected\")) {\n                    item.dom.removeAttribute(\"aria-selected\");\n                }\n                i++;\n            }\n        });\n        while (i < this.items.length && !(this.items.length == 1 && this.items[0].diagnostic.from < 0)) {\n            needsSync = true;\n            this.items.pop();\n        }\n        if (this.items.length == 0) {\n            this.items.push(new PanelItem(this.view, {\n                from: -1, to: -1,\n                severity: \"info\",\n                message: this.view.state.phrase(\"No diagnostics\")\n            }));\n            needsSync = true;\n        }\n        if (newSelectedItem) {\n            this.list.setAttribute(\"aria-activedescendant\", newSelectedItem.id);\n            this.view.requestMeasure({\n                key: this,\n                read: () => ({ sel: newSelectedItem.dom.getBoundingClientRect(), panel: this.list.getBoundingClientRect() }),\n                write: ({ sel, panel }) => {\n                    let scaleY = panel.height / this.list.offsetHeight;\n                    if (sel.top < panel.top)\n                        this.list.scrollTop -= (panel.top - sel.top) / scaleY;\n                    else if (sel.bottom > panel.bottom)\n                        this.list.scrollTop += (sel.bottom - panel.bottom) / scaleY;\n                }\n            });\n        }\n        else if (this.selectedIndex < 0) {\n            this.list.removeAttribute(\"aria-activedescendant\");\n        }\n        if (needsSync)\n            this.sync();\n    }\n    sync() {\n        let domPos = this.list.firstChild;\n        function rm() {\n            let prev = domPos;\n            domPos = prev.nextSibling;\n            prev.remove();\n        }\n        for (let item of this.items) {\n            if (item.dom.parentNode == this.list) {\n                while (domPos != item.dom)\n                    rm();\n                domPos = item.dom.nextSibling;\n            }\n            else {\n                this.list.insertBefore(item.dom, domPos);\n            }\n        }\n        while (domPos)\n            rm();\n    }\n    moveSelection(selectedIndex) {\n        if (this.selectedIndex < 0)\n            return;\n        let field = this.view.state.field(lintState);\n        let selection = findDiagnostic(field.diagnostics, this.items[selectedIndex].diagnostic);\n        if (!selection)\n            return;\n        this.view.dispatch({\n            selection: { anchor: selection.from, head: selection.to },\n            scrollIntoView: true,\n            effects: movePanelSelection.of(selection)\n        });\n    }\n    static open(view) { return new LintPanel(view); }\n}\nfunction svg(content, attrs = `viewBox=\"0 0 40 40\"`) {\n    return `url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" ${attrs}>${encodeURIComponent(content)}</svg>')`;\n}\nfunction underline(color) {\n    return svg(`<path d=\"m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0\" stroke=\"${color}\" fill=\"none\" stroke-width=\".7\"/>`, `width=\"6\" height=\"3\"`);\n}\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-diagnostic\": {\n        padding: \"3px 6px 3px 8px\",\n        marginLeft: \"-1px\",\n        display: \"block\",\n        whiteSpace: \"pre-wrap\"\n    },\n    \".cm-diagnostic-error\": { borderLeft: \"5px solid #d11\" },\n    \".cm-diagnostic-warning\": { borderLeft: \"5px solid orange\" },\n    \".cm-diagnostic-info\": { borderLeft: \"5px solid #999\" },\n    \".cm-diagnostic-hint\": { borderLeft: \"5px solid #66d\" },\n    \".cm-diagnosticAction\": {\n        font: \"inherit\",\n        border: \"none\",\n        padding: \"2px 4px\",\n        backgroundColor: \"#444\",\n        color: \"white\",\n        borderRadius: \"3px\",\n        marginLeft: \"8px\",\n        cursor: \"pointer\"\n    },\n    \".cm-diagnosticSource\": {\n        fontSize: \"70%\",\n        opacity: .7\n    },\n    \".cm-lintRange\": {\n        backgroundPosition: \"left bottom\",\n        backgroundRepeat: \"repeat-x\",\n        paddingBottom: \"0.7px\",\n    },\n    \".cm-lintRange-error\": { backgroundImage: /*@__PURE__*/underline(\"#d11\") },\n    \".cm-lintRange-warning\": { backgroundImage: /*@__PURE__*/underline(\"orange\") },\n    \".cm-lintRange-info\": { backgroundImage: /*@__PURE__*/underline(\"#999\") },\n    \".cm-lintRange-hint\": { backgroundImage: /*@__PURE__*/underline(\"#66d\") },\n    \".cm-lintRange-active\": { backgroundColor: \"#ffdd9980\" },\n    \".cm-tooltip-lint\": {\n        padding: 0,\n        margin: 0\n    },\n    \".cm-lintPoint\": {\n        position: \"relative\",\n        \"&:after\": {\n            content: '\"\"',\n            position: \"absolute\",\n            bottom: 0,\n            left: \"-2px\",\n            borderLeft: \"3px solid transparent\",\n            borderRight: \"3px solid transparent\",\n            borderBottom: \"4px solid #d11\"\n        }\n    },\n    \".cm-lintPoint-warning\": {\n        \"&:after\": { borderBottomColor: \"orange\" }\n    },\n    \".cm-lintPoint-info\": {\n        \"&:after\": { borderBottomColor: \"#999\" }\n    },\n    \".cm-lintPoint-hint\": {\n        \"&:after\": { borderBottomColor: \"#66d\" }\n    },\n    \".cm-panel.cm-panel-lint\": {\n        position: \"relative\",\n        \"& ul\": {\n            maxHeight: \"100px\",\n            overflowY: \"auto\",\n            \"& [aria-selected]\": {\n                backgroundColor: \"#ddd\",\n                \"& u\": { textDecoration: \"underline\" }\n            },\n            \"&:focus [aria-selected]\": {\n                background_fallback: \"#bdf\",\n                backgroundColor: \"Highlight\",\n                color_fallback: \"white\",\n                color: \"HighlightText\"\n            },\n            \"& u\": { textDecoration: \"none\" },\n            padding: 0,\n            margin: 0\n        },\n        \"& [name=close]\": {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"2px\",\n            background: \"inherit\",\n            border: \"none\",\n            font: \"inherit\",\n            padding: 0,\n            margin: 0\n        }\n    }\n});\nfunction severityWeight(sev) {\n    return sev == \"error\" ? 4 : sev == \"warning\" ? 3 : sev == \"info\" ? 2 : 1;\n}\nfunction maxSeverity(diagnostics) {\n    let sev = \"hint\", weight = 1;\n    for (let d of diagnostics) {\n        let w = severityWeight(d.severity);\n        if (w > weight) {\n            weight = w;\n            sev = d.severity;\n        }\n    }\n    return sev;\n}\nclass LintGutterMarker extends GutterMarker {\n    constructor(diagnostics) {\n        super();\n        this.diagnostics = diagnostics;\n        this.severity = maxSeverity(diagnostics);\n    }\n    toDOM(view) {\n        let elt = document.createElement(\"div\");\n        elt.className = \"cm-lint-marker cm-lint-marker-\" + this.severity;\n        let diagnostics = this.diagnostics;\n        let diagnosticsFilter = view.state.facet(lintGutterConfig).tooltipFilter;\n        if (diagnosticsFilter)\n            diagnostics = diagnosticsFilter(diagnostics, view.state);\n        if (diagnostics.length)\n            elt.onmouseover = () => gutterMarkerMouseOver(view, elt, diagnostics);\n        return elt;\n    }\n}\nfunction trackHoverOn(view, marker) {\n    let mousemove = (event) => {\n        let rect = marker.getBoundingClientRect();\n        if (event.clientX > rect.left - 10 /* Hover.Margin */ && event.clientX < rect.right + 10 /* Hover.Margin */ &&\n            event.clientY > rect.top - 10 /* Hover.Margin */ && event.clientY < rect.bottom + 10 /* Hover.Margin */)\n            return;\n        for (let target = event.target; target; target = target.parentNode) {\n            if (target.nodeType == 1 && target.classList.contains(\"cm-tooltip-lint\"))\n                return;\n        }\n        window.removeEventListener(\"mousemove\", mousemove);\n        if (view.state.field(lintGutterTooltip))\n            view.dispatch({ effects: setLintGutterTooltip.of(null) });\n    };\n    window.addEventListener(\"mousemove\", mousemove);\n}\nfunction gutterMarkerMouseOver(view, marker, diagnostics) {\n    function hovered() {\n        let line = view.elementAtHeight(marker.getBoundingClientRect().top + 5 - view.documentTop);\n        const linePos = view.coordsAtPos(line.from);\n        if (linePos) {\n            view.dispatch({ effects: setLintGutterTooltip.of({\n                    pos: line.from,\n                    above: false,\n                    clip: false,\n                    create() {\n                        return {\n                            dom: diagnosticsTooltip(view, diagnostics),\n                            getCoords: () => marker.getBoundingClientRect()\n                        };\n                    }\n                }) });\n        }\n        marker.onmouseout = marker.onmousemove = null;\n        trackHoverOn(view, marker);\n    }\n    let { hoverTime } = view.state.facet(lintGutterConfig);\n    let hoverTimeout = setTimeout(hovered, hoverTime);\n    marker.onmouseout = () => {\n        clearTimeout(hoverTimeout);\n        marker.onmouseout = marker.onmousemove = null;\n    };\n    marker.onmousemove = () => {\n        clearTimeout(hoverTimeout);\n        hoverTimeout = setTimeout(hovered, hoverTime);\n    };\n}\nfunction markersForDiagnostics(doc, diagnostics) {\n    let byLine = Object.create(null);\n    for (let diagnostic of diagnostics) {\n        let line = doc.lineAt(diagnostic.from);\n        (byLine[line.from] || (byLine[line.from] = [])).push(diagnostic);\n    }\n    let markers = [];\n    for (let line in byLine) {\n        markers.push(new LintGutterMarker(byLine[line]).range(+line));\n    }\n    return RangeSet.of(markers, true);\n}\nconst lintGutterExtension = /*@__PURE__*/gutter({\n    class: \"cm-gutter-lint\",\n    markers: view => view.state.field(lintGutterMarkers),\n    widgetMarker: (view, widget, block) => {\n        let diagnostics = [];\n        view.state.field(lintGutterMarkers).between(block.from, block.to, (from, to, value) => {\n            if (from > block.from && from < block.to)\n                diagnostics.push(...value.diagnostics);\n        });\n        return diagnostics.length ? new LintGutterMarker(diagnostics) : null;\n    }\n});\nconst lintGutterMarkers = /*@__PURE__*/StateField.define({\n    create() {\n        return RangeSet.empty;\n    },\n    update(markers, tr) {\n        markers = markers.map(tr.changes);\n        let diagnosticFilter = tr.state.facet(lintGutterConfig).markerFilter;\n        for (let effect of tr.effects) {\n            if (effect.is(setDiagnosticsEffect)) {\n                let diagnostics = effect.value;\n                if (diagnosticFilter)\n                    diagnostics = diagnosticFilter(diagnostics || [], tr.state);\n                markers = markersForDiagnostics(tr.state.doc, diagnostics.slice(0));\n            }\n        }\n        return markers;\n    }\n});\nconst setLintGutterTooltip = /*@__PURE__*/StateEffect.define();\nconst lintGutterTooltip = /*@__PURE__*/StateField.define({\n    create() { return null; },\n    update(tooltip, tr) {\n        if (tooltip && tr.docChanged)\n            tooltip = hideTooltip(tr, tooltip) ? null : Object.assign(Object.assign({}, tooltip), { pos: tr.changes.mapPos(tooltip.pos) });\n        return tr.effects.reduce((t, e) => e.is(setLintGutterTooltip) ? e.value : t, tooltip);\n    },\n    provide: field => showTooltip.from(field)\n});\nconst lintGutterTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-gutter-lint\": {\n        width: \"1.4em\",\n        \"& .cm-gutterElement\": {\n            padding: \".2em\"\n        }\n    },\n    \".cm-lint-marker\": {\n        width: \"1em\",\n        height: \"1em\"\n    },\n    \".cm-lint-marker-info\": {\n        content: /*@__PURE__*/svg(`<path fill=\"#aaf\" stroke=\"#77e\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M5 5L35 5L35 35L5 35Z\"/>`)\n    },\n    \".cm-lint-marker-warning\": {\n        content: /*@__PURE__*/svg(`<path fill=\"#fe8\" stroke=\"#fd7\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M20 6L37 35L3 35Z\"/>`),\n    },\n    \".cm-lint-marker-error\": {\n        content: /*@__PURE__*/svg(`<circle cx=\"20\" cy=\"20\" r=\"15\" fill=\"#f87\" stroke=\"#f43\" stroke-width=\"6\"/>`)\n    },\n});\nconst lintExtensions = [\n    lintState,\n    /*@__PURE__*/EditorView.decorations.compute([lintState], state => {\n        let { selected, panel } = state.field(lintState);\n        return !selected || !panel || selected.from == selected.to ? Decoration.none : Decoration.set([\n            activeMark.range(selected.from, selected.to)\n        ]);\n    }),\n    /*@__PURE__*/hoverTooltip(lintTooltip, { hideOn: hideTooltip }),\n    baseTheme\n];\nconst lintGutterConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            hoverTime: 300 /* Hover.Time */,\n            markerFilter: null,\n            tooltipFilter: null\n        });\n    }\n});\n/**\nReturns an extension that installs a gutter showing markers for\neach line that has diagnostics, which can be hovered over to see\nthe diagnostics.\n*/\nfunction lintGutter(config = {}) {\n    return [lintGutterConfig.of(config), lintGutterMarkers, lintGutterExtension, lintGutterTheme, lintGutterTooltip];\n}\n/**\nIterate over the marked diagnostics for the given editor state,\ncalling `f` for each of them. Note that, if the document changed\nsince the diagnostics were created, the `Diagnostic` object will\nhold the original outdated position, whereas the `to` and `from`\narguments hold the diagnostic's current position.\n*/\nfunction forEachDiagnostic(state, f) {\n    let lState = state.field(lintState, false);\n    if (lState && lState.diagnostics.size) {\n        let pending = [], pendingStart = [], lastEnd = -1;\n        for (let iter = RangeSet.iter([lState.diagnostics]);; iter.next()) {\n            for (let i = 0; i < pending.length; i++)\n                if (!iter.value || iter.value.spec.diagnostics.indexOf(pending[i]) < 0) {\n                    f(pending[i], pendingStart[i], lastEnd);\n                    pending.splice(i, 1);\n                    pendingStart.splice(i--, 1);\n                }\n            if (!iter.value)\n                break;\n            for (let d of iter.value.spec.diagnostics)\n                if (pending.indexOf(d) < 0) {\n                    pending.push(d);\n                    pendingStart.push(iter.from);\n                }\n            lastEnd = iter.to;\n        }\n    }\n}\n\nexport { closeLintPanel, diagnosticCount, forEachDiagnostic, forceLinting, lintGutter, lintKeymap, linter, nextDiagnostic, openLintPanel, previousDiagnostic, setDiagnostics, setDiagnosticsEffect };\n","import { lineNumbers, highlightActiveLineGutter, highlightSpecialChars, drawSelection, dropCursor, rectangularSelection, crosshairCursor, highlightActiveLine, keymap } from '@codemirror/view';\nimport { EditorState } from '@codemirror/state';\nimport { history, defaultKeymap, historyKeymap } from '@codemirror/commands';\nimport { highlightSelectionMatches, searchKeymap } from '@codemirror/search';\nimport { closeBrackets, autocompletion, closeBracketsKeymap, completionKeymap } from '@codemirror/autocomplete';\nimport { foldGutter, indentOnInput, syntaxHighlighting, defaultHighlightStyle, bracketMatching, indentUnit, foldKeymap } from '@codemirror/language';\nimport { lintKeymap } from '@codemirror/lint';\n/**\nThis is an extension value that just pulls together a number of\nextensions that you might want in a basic editor. It is meant as a\nconvenient helper to quickly set up CodeMirror without installing\nand importing a lot of separate packages.\n\nSpecifically, it includes...\n\n - [the default command bindings](https://codemirror.net/6/docs/ref/#commands.defaultKeymap)\n - [line numbers](https://codemirror.net/6/docs/ref/#view.lineNumbers)\n - [special character highlighting](https://codemirror.net/6/docs/ref/#view.highlightSpecialChars)\n - [the undo history](https://codemirror.net/6/docs/ref/#commands.history)\n - [a fold gutter](https://codemirror.net/6/docs/ref/#language.foldGutter)\n - [custom selection drawing](https://codemirror.net/6/docs/ref/#view.drawSelection)\n - [drop cursor](https://codemirror.net/6/docs/ref/#view.dropCursor)\n - [multiple selections](https://codemirror.net/6/docs/ref/#state.EditorState^allowMultipleSelections)\n - [reindentation on input](https://codemirror.net/6/docs/ref/#language.indentOnInput)\n - [the default highlight style](https://codemirror.net/6/docs/ref/#language.defaultHighlightStyle) (as fallback)\n - [bracket matching](https://codemirror.net/6/docs/ref/#language.bracketMatching)\n - [bracket closing](https://codemirror.net/6/docs/ref/#autocomplete.closeBrackets)\n - [autocompletion](https://codemirror.net/6/docs/ref/#autocomplete.autocompletion)\n - [rectangular selection](https://codemirror.net/6/docs/ref/#view.rectangularSelection) and [crosshair cursor](https://codemirror.net/6/docs/ref/#view.crosshairCursor)\n - [active line highlighting](https://codemirror.net/6/docs/ref/#view.highlightActiveLine)\n - [active line gutter highlighting](https://codemirror.net/6/docs/ref/#view.highlightActiveLineGutter)\n - [selection match highlighting](https://codemirror.net/6/docs/ref/#search.highlightSelectionMatches)\n - [search](https://codemirror.net/6/docs/ref/#search.searchKeymap)\n - [linting](https://codemirror.net/6/docs/ref/#lint.lintKeymap)\n\n(You'll probably want to add some language package to your setup\ntoo.)\n\nThis extension does not allow customization. The idea is that,\nonce you decide you want to configure your editor more precisely,\nyou take this package's source (which is just a bunch of imports\nand an array literal), copy it into your own code, and adjust it\nas desired.\n*/\nexport var basicSetup = function basicSetup(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var {\n    crosshairCursor: initCrosshairCursor = false\n  } = options;\n  var keymaps = [];\n  if (options.closeBracketsKeymap !== false) {\n    keymaps = keymaps.concat(closeBracketsKeymap);\n  }\n  if (options.defaultKeymap !== false) {\n    keymaps = keymaps.concat(defaultKeymap);\n  }\n  if (options.searchKeymap !== false) {\n    keymaps = keymaps.concat(searchKeymap);\n  }\n  if (options.historyKeymap !== false) {\n    keymaps = keymaps.concat(historyKeymap);\n  }\n  if (options.foldKeymap !== false) {\n    keymaps = keymaps.concat(foldKeymap);\n  }\n  if (options.completionKeymap !== false) {\n    keymaps = keymaps.concat(completionKeymap);\n  }\n  if (options.lintKeymap !== false) {\n    keymaps = keymaps.concat(lintKeymap);\n  }\n  var extensions = [];\n  if (options.lineNumbers !== false) extensions.push(lineNumbers());\n  if (options.highlightActiveLineGutter !== false) extensions.push(highlightActiveLineGutter());\n  if (options.highlightSpecialChars !== false) extensions.push(highlightSpecialChars());\n  if (options.history !== false) extensions.push(history());\n  if (options.foldGutter !== false) extensions.push(foldGutter());\n  if (options.drawSelection !== false) extensions.push(drawSelection());\n  if (options.dropCursor !== false) extensions.push(dropCursor());\n  if (options.allowMultipleSelections !== false) extensions.push(EditorState.allowMultipleSelections.of(true));\n  if (options.indentOnInput !== false) extensions.push(indentOnInput());\n  if (options.syntaxHighlighting !== false) extensions.push(syntaxHighlighting(defaultHighlightStyle, {\n    fallback: true\n  }));\n  if (options.bracketMatching !== false) extensions.push(bracketMatching());\n  if (options.closeBrackets !== false) extensions.push(closeBrackets());\n  if (options.autocompletion !== false) extensions.push(autocompletion());\n  if (options.rectangularSelection !== false) extensions.push(rectangularSelection());\n  if (initCrosshairCursor !== false) extensions.push(crosshairCursor());\n  if (options.highlightActiveLine !== false) extensions.push(highlightActiveLine());\n  if (options.highlightSelectionMatches !== false) extensions.push(highlightSelectionMatches());\n  if (options.tabSize && typeof options.tabSize === 'number') extensions.push(indentUnit.of(' '.repeat(options.tabSize)));\n  return extensions.concat([keymap.of(keymaps.flat())]).filter(Boolean);\n};\n/**\nA minimal set of extensions to create a functional editor. Only\nincludes [the default keymap](https://codemirror.net/6/docs/ref/#commands.defaultKeymap), [undo\nhistory](https://codemirror.net/6/docs/ref/#commands.history), [special character\nhighlighting](https://codemirror.net/6/docs/ref/#view.highlightSpecialChars), [custom selection\ndrawing](https://codemirror.net/6/docs/ref/#view.drawSelection), and [default highlight\nstyle](https://codemirror.net/6/docs/ref/#language.defaultHighlightStyle).\n*/\nexport var minimalSetup = function minimalSetup(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var keymaps = [];\n  if (options.defaultKeymap !== false) {\n    keymaps = keymaps.concat(defaultKeymap);\n  }\n  if (options.historyKeymap !== false) {\n    keymaps = keymaps.concat(historyKeymap);\n  }\n  var extensions = [];\n  if (options.highlightSpecialChars !== false) extensions.push(highlightSpecialChars());\n  if (options.history !== false) extensions.push(history());\n  if (options.drawSelection !== false) extensions.push(drawSelection());\n  if (options.syntaxHighlighting !== false) extensions.push(syntaxHighlighting(defaultHighlightStyle, {\n    fallback: true\n  }));\n  return extensions.concat([keymap.of(keymaps.flat())]).filter(Boolean);\n};","import { Annotation, Facet, combineConfig, StateField, Transaction, ChangeSet, ChangeDesc, EditorSelection, StateEffect, Text, findClusterBreak, countColumn, CharCategory } from '@codemirror/state';\nimport { EditorView, Direction } from '@codemirror/view';\nimport { IndentContext, getIndentation, indentString, matchBrackets, syntaxTree, getIndentUnit, indentUnit } from '@codemirror/language';\nimport { NodeProp } from '@lezer/common';\n\n/**\nComment or uncomment the current selection. Will use line comments\nif available, otherwise falling back to block comments.\n*/\nconst toggleComment = target => {\n    let { state } = target, line = state.doc.lineAt(state.selection.main.from), config = getConfig(target.state, line.from);\n    return config.line ? toggleLineComment(target) : config.block ? toggleBlockCommentByLine(target) : false;\n};\nfunction command(f, option) {\n    return ({ state, dispatch }) => {\n        if (state.readOnly)\n            return false;\n        let tr = f(option, state);\n        if (!tr)\n            return false;\n        dispatch(state.update(tr));\n        return true;\n    };\n}\n/**\nComment or uncomment the current selection using line comments.\nThe line comment syntax is taken from the\n[`commentTokens`](https://codemirror.net/6/docs/ref/#commands.CommentTokens) [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt).\n*/\nconst toggleLineComment = /*@__PURE__*/command(changeLineComment, 0 /* CommentOption.Toggle */);\n/**\nComment the current selection using line comments.\n*/\nconst lineComment = /*@__PURE__*/command(changeLineComment, 1 /* CommentOption.Comment */);\n/**\nUncomment the current selection using line comments.\n*/\nconst lineUncomment = /*@__PURE__*/command(changeLineComment, 2 /* CommentOption.Uncomment */);\n/**\nComment or uncomment the current selection using block comments.\nThe block comment syntax is taken from the\n[`commentTokens`](https://codemirror.net/6/docs/ref/#commands.CommentTokens) [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt).\n*/\nconst toggleBlockComment = /*@__PURE__*/command(changeBlockComment, 0 /* CommentOption.Toggle */);\n/**\nComment the current selection using block comments.\n*/\nconst blockComment = /*@__PURE__*/command(changeBlockComment, 1 /* CommentOption.Comment */);\n/**\nUncomment the current selection using block comments.\n*/\nconst blockUncomment = /*@__PURE__*/command(changeBlockComment, 2 /* CommentOption.Uncomment */);\n/**\nComment or uncomment the lines around the current selection using\nblock comments.\n*/\nconst toggleBlockCommentByLine = /*@__PURE__*/command((o, s) => changeBlockComment(o, s, selectedLineRanges(s)), 0 /* CommentOption.Toggle */);\nfunction getConfig(state, pos) {\n    let data = state.languageDataAt(\"commentTokens\", pos, 1);\n    return data.length ? data[0] : {};\n}\nconst SearchMargin = 50;\n/**\nDetermines if the given range is block-commented in the given\nstate.\n*/\nfunction findBlockComment(state, { open, close }, from, to) {\n    let textBefore = state.sliceDoc(from - SearchMargin, from);\n    let textAfter = state.sliceDoc(to, to + SearchMargin);\n    let spaceBefore = /\\s*$/.exec(textBefore)[0].length, spaceAfter = /^\\s*/.exec(textAfter)[0].length;\n    let beforeOff = textBefore.length - spaceBefore;\n    if (textBefore.slice(beforeOff - open.length, beforeOff) == open &&\n        textAfter.slice(spaceAfter, spaceAfter + close.length) == close) {\n        return { open: { pos: from - spaceBefore, margin: spaceBefore && 1 },\n            close: { pos: to + spaceAfter, margin: spaceAfter && 1 } };\n    }\n    let startText, endText;\n    if (to - from <= 2 * SearchMargin) {\n        startText = endText = state.sliceDoc(from, to);\n    }\n    else {\n        startText = state.sliceDoc(from, from + SearchMargin);\n        endText = state.sliceDoc(to - SearchMargin, to);\n    }\n    let startSpace = /^\\s*/.exec(startText)[0].length, endSpace = /\\s*$/.exec(endText)[0].length;\n    let endOff = endText.length - endSpace - close.length;\n    if (startText.slice(startSpace, startSpace + open.length) == open &&\n        endText.slice(endOff, endOff + close.length) == close) {\n        return { open: { pos: from + startSpace + open.length,\n                margin: /\\s/.test(startText.charAt(startSpace + open.length)) ? 1 : 0 },\n            close: { pos: to - endSpace - close.length,\n                margin: /\\s/.test(endText.charAt(endOff - 1)) ? 1 : 0 } };\n    }\n    return null;\n}\nfunction selectedLineRanges(state) {\n    let ranges = [];\n    for (let r of state.selection.ranges) {\n        let fromLine = state.doc.lineAt(r.from);\n        let toLine = r.to <= fromLine.to ? fromLine : state.doc.lineAt(r.to);\n        if (toLine.from > fromLine.from && toLine.from == r.to)\n            toLine = r.to == fromLine.to + 1 ? fromLine : state.doc.lineAt(r.to - 1);\n        let last = ranges.length - 1;\n        if (last >= 0 && ranges[last].to > fromLine.from)\n            ranges[last].to = toLine.to;\n        else\n            ranges.push({ from: fromLine.from + /^\\s*/.exec(fromLine.text)[0].length, to: toLine.to });\n    }\n    return ranges;\n}\n// Performs toggle, comment and uncomment of block comments in\n// languages that support them.\nfunction changeBlockComment(option, state, ranges = state.selection.ranges) {\n    let tokens = ranges.map(r => getConfig(state, r.from).block);\n    if (!tokens.every(c => c))\n        return null;\n    let comments = ranges.map((r, i) => findBlockComment(state, tokens[i], r.from, r.to));\n    if (option != 2 /* CommentOption.Uncomment */ && !comments.every(c => c)) {\n        return { changes: state.changes(ranges.map((range, i) => {\n                if (comments[i])\n                    return [];\n                return [{ from: range.from, insert: tokens[i].open + \" \" }, { from: range.to, insert: \" \" + tokens[i].close }];\n            })) };\n    }\n    else if (option != 1 /* CommentOption.Comment */ && comments.some(c => c)) {\n        let changes = [];\n        for (let i = 0, comment; i < comments.length; i++)\n            if (comment = comments[i]) {\n                let token = tokens[i], { open, close } = comment;\n                changes.push({ from: open.pos - token.open.length, to: open.pos + open.margin }, { from: close.pos - close.margin, to: close.pos + token.close.length });\n            }\n        return { changes };\n    }\n    return null;\n}\n// Performs toggle, comment and uncomment of line comments.\nfunction changeLineComment(option, state, ranges = state.selection.ranges) {\n    let lines = [];\n    let prevLine = -1;\n    for (let { from, to } of ranges) {\n        let startI = lines.length, minIndent = 1e9;\n        let token = getConfig(state, from).line;\n        if (!token)\n            continue;\n        for (let pos = from; pos <= to;) {\n            let line = state.doc.lineAt(pos);\n            if (line.from > prevLine && (from == to || to > line.from)) {\n                prevLine = line.from;\n                let indent = /^\\s*/.exec(line.text)[0].length;\n                let empty = indent == line.length;\n                let comment = line.text.slice(indent, indent + token.length) == token ? indent : -1;\n                if (indent < line.text.length && indent < minIndent)\n                    minIndent = indent;\n                lines.push({ line, comment, token, indent, empty, single: false });\n            }\n            pos = line.to + 1;\n        }\n        if (minIndent < 1e9)\n            for (let i = startI; i < lines.length; i++)\n                if (lines[i].indent < lines[i].line.text.length)\n                    lines[i].indent = minIndent;\n        if (lines.length == startI + 1)\n            lines[startI].single = true;\n    }\n    if (option != 2 /* CommentOption.Uncomment */ && lines.some(l => l.comment < 0 && (!l.empty || l.single))) {\n        let changes = [];\n        for (let { line, token, indent, empty, single } of lines)\n            if (single || !empty)\n                changes.push({ from: line.from + indent, insert: token + \" \" });\n        let changeSet = state.changes(changes);\n        return { changes: changeSet, selection: state.selection.map(changeSet, 1) };\n    }\n    else if (option != 1 /* CommentOption.Comment */ && lines.some(l => l.comment >= 0)) {\n        let changes = [];\n        for (let { line, comment, token } of lines)\n            if (comment >= 0) {\n                let from = line.from + comment, to = from + token.length;\n                if (line.text[to - line.from] == \" \")\n                    to++;\n                changes.push({ from, to });\n            }\n        return { changes };\n    }\n    return null;\n}\n\nconst fromHistory = /*@__PURE__*/Annotation.define();\n/**\nTransaction annotation that will prevent that transaction from\nbeing combined with other transactions in the undo history. Given\n`\"before\"`, it'll prevent merging with previous transactions. With\n`\"after\"`, subsequent transactions won't be combined with this\none. With `\"full\"`, the transaction is isolated on both sides.\n*/\nconst isolateHistory = /*@__PURE__*/Annotation.define();\n/**\nThis facet provides a way to register functions that, given a\ntransaction, provide a set of effects that the history should\nstore when inverting the transaction. This can be used to\nintegrate some kinds of effects in the history, so that they can\nbe undone (and redone again).\n*/\nconst invertedEffects = /*@__PURE__*/Facet.define();\nconst historyConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            minDepth: 100,\n            newGroupDelay: 500,\n            joinToEvent: (_t, isAdjacent) => isAdjacent,\n        }, {\n            minDepth: Math.max,\n            newGroupDelay: Math.min,\n            joinToEvent: (a, b) => (tr, adj) => a(tr, adj) || b(tr, adj)\n        });\n    }\n});\nconst historyField_ = /*@__PURE__*/StateField.define({\n    create() {\n        return HistoryState.empty;\n    },\n    update(state, tr) {\n        let config = tr.state.facet(historyConfig);\n        let fromHist = tr.annotation(fromHistory);\n        if (fromHist) {\n            let item = HistEvent.fromTransaction(tr, fromHist.selection), from = fromHist.side;\n            let other = from == 0 /* BranchName.Done */ ? state.undone : state.done;\n            if (item)\n                other = updateBranch(other, other.length, config.minDepth, item);\n            else\n                other = addSelection(other, tr.startState.selection);\n            return new HistoryState(from == 0 /* BranchName.Done */ ? fromHist.rest : other, from == 0 /* BranchName.Done */ ? other : fromHist.rest);\n        }\n        let isolate = tr.annotation(isolateHistory);\n        if (isolate == \"full\" || isolate == \"before\")\n            state = state.isolate();\n        if (tr.annotation(Transaction.addToHistory) === false)\n            return !tr.changes.empty ? state.addMapping(tr.changes.desc) : state;\n        let event = HistEvent.fromTransaction(tr);\n        let time = tr.annotation(Transaction.time), userEvent = tr.annotation(Transaction.userEvent);\n        if (event)\n            state = state.addChanges(event, time, userEvent, config, tr);\n        else if (tr.selection)\n            state = state.addSelection(tr.startState.selection, time, userEvent, config.newGroupDelay);\n        if (isolate == \"full\" || isolate == \"after\")\n            state = state.isolate();\n        return state;\n    },\n    toJSON(value) {\n        return { done: value.done.map(e => e.toJSON()), undone: value.undone.map(e => e.toJSON()) };\n    },\n    fromJSON(json) {\n        return new HistoryState(json.done.map(HistEvent.fromJSON), json.undone.map(HistEvent.fromJSON));\n    }\n});\n/**\nCreate a history extension with the given configuration.\n*/\nfunction history(config = {}) {\n    return [\n        historyField_,\n        historyConfig.of(config),\n        EditorView.domEventHandlers({\n            beforeinput(e, view) {\n                let command = e.inputType == \"historyUndo\" ? undo : e.inputType == \"historyRedo\" ? redo : null;\n                if (!command)\n                    return false;\n                e.preventDefault();\n                return command(view);\n            }\n        })\n    ];\n}\n/**\nThe state field used to store the history data. Should probably\nonly be used when you want to\n[serialize](https://codemirror.net/6/docs/ref/#state.EditorState.toJSON) or\n[deserialize](https://codemirror.net/6/docs/ref/#state.EditorState^fromJSON) state objects in a way\nthat preserves history.\n*/\nconst historyField = historyField_;\nfunction cmd(side, selection) {\n    return function ({ state, dispatch }) {\n        if (!selection && state.readOnly)\n            return false;\n        let historyState = state.field(historyField_, false);\n        if (!historyState)\n            return false;\n        let tr = historyState.pop(side, state, selection);\n        if (!tr)\n            return false;\n        dispatch(tr);\n        return true;\n    };\n}\n/**\nUndo a single group of history events. Returns false if no group\nwas available.\n*/\nconst undo = /*@__PURE__*/cmd(0 /* BranchName.Done */, false);\n/**\nRedo a group of history events. Returns false if no group was\navailable.\n*/\nconst redo = /*@__PURE__*/cmd(1 /* BranchName.Undone */, false);\n/**\nUndo a change or selection change.\n*/\nconst undoSelection = /*@__PURE__*/cmd(0 /* BranchName.Done */, true);\n/**\nRedo a change or selection change.\n*/\nconst redoSelection = /*@__PURE__*/cmd(1 /* BranchName.Undone */, true);\nfunction depth(side) {\n    return function (state) {\n        let histState = state.field(historyField_, false);\n        if (!histState)\n            return 0;\n        let branch = side == 0 /* BranchName.Done */ ? histState.done : histState.undone;\n        return branch.length - (branch.length && !branch[0].changes ? 1 : 0);\n    };\n}\n/**\nThe amount of undoable change events available in a given state.\n*/\nconst undoDepth = /*@__PURE__*/depth(0 /* BranchName.Done */);\n/**\nThe amount of redoable change events available in a given state.\n*/\nconst redoDepth = /*@__PURE__*/depth(1 /* BranchName.Undone */);\n// History events store groups of changes or effects that need to be\n// undone/redone together.\nclass HistEvent {\n    constructor(\n    // The changes in this event. Normal events hold at least one\n    // change or effect. But it may be necessary to store selection\n    // events before the first change, in which case a special type of\n    // instance is created which doesn't hold any changes, with\n    // changes == startSelection == undefined\n    changes, \n    // The effects associated with this event\n    effects, \n    // Accumulated mapping (from addToHistory==false) that should be\n    // applied to events below this one.\n    mapped, \n    // The selection before this event\n    startSelection, \n    // Stores selection changes after this event, to be used for\n    // selection undo/redo.\n    selectionsAfter) {\n        this.changes = changes;\n        this.effects = effects;\n        this.mapped = mapped;\n        this.startSelection = startSelection;\n        this.selectionsAfter = selectionsAfter;\n    }\n    setSelAfter(after) {\n        return new HistEvent(this.changes, this.effects, this.mapped, this.startSelection, after);\n    }\n    toJSON() {\n        var _a, _b, _c;\n        return {\n            changes: (_a = this.changes) === null || _a === void 0 ? void 0 : _a.toJSON(),\n            mapped: (_b = this.mapped) === null || _b === void 0 ? void 0 : _b.toJSON(),\n            startSelection: (_c = this.startSelection) === null || _c === void 0 ? void 0 : _c.toJSON(),\n            selectionsAfter: this.selectionsAfter.map(s => s.toJSON())\n        };\n    }\n    static fromJSON(json) {\n        return new HistEvent(json.changes && ChangeSet.fromJSON(json.changes), [], json.mapped && ChangeDesc.fromJSON(json.mapped), json.startSelection && EditorSelection.fromJSON(json.startSelection), json.selectionsAfter.map(EditorSelection.fromJSON));\n    }\n    // This does not check `addToHistory` and such, it assumes the\n    // transaction needs to be converted to an item. Returns null when\n    // there are no changes or effects in the transaction.\n    static fromTransaction(tr, selection) {\n        let effects = none;\n        for (let invert of tr.startState.facet(invertedEffects)) {\n            let result = invert(tr);\n            if (result.length)\n                effects = effects.concat(result);\n        }\n        if (!effects.length && tr.changes.empty)\n            return null;\n        return new HistEvent(tr.changes.invert(tr.startState.doc), effects, undefined, selection || tr.startState.selection, none);\n    }\n    static selection(selections) {\n        return new HistEvent(undefined, none, undefined, undefined, selections);\n    }\n}\nfunction updateBranch(branch, to, maxLen, newEvent) {\n    let start = to + 1 > maxLen + 20 ? to - maxLen - 1 : 0;\n    let newBranch = branch.slice(start, to);\n    newBranch.push(newEvent);\n    return newBranch;\n}\nfunction isAdjacent(a, b) {\n    let ranges = [], isAdjacent = false;\n    a.iterChangedRanges((f, t) => ranges.push(f, t));\n    b.iterChangedRanges((_f, _t, f, t) => {\n        for (let i = 0; i < ranges.length;) {\n            let from = ranges[i++], to = ranges[i++];\n            if (t >= from && f <= to)\n                isAdjacent = true;\n        }\n    });\n    return isAdjacent;\n}\nfunction eqSelectionShape(a, b) {\n    return a.ranges.length == b.ranges.length &&\n        a.ranges.filter((r, i) => r.empty != b.ranges[i].empty).length === 0;\n}\nfunction conc(a, b) {\n    return !a.length ? b : !b.length ? a : a.concat(b);\n}\nconst none = [];\nconst MaxSelectionsPerEvent = 200;\nfunction addSelection(branch, selection) {\n    if (!branch.length) {\n        return [HistEvent.selection([selection])];\n    }\n    else {\n        let lastEvent = branch[branch.length - 1];\n        let sels = lastEvent.selectionsAfter.slice(Math.max(0, lastEvent.selectionsAfter.length - MaxSelectionsPerEvent));\n        if (sels.length && sels[sels.length - 1].eq(selection))\n            return branch;\n        sels.push(selection);\n        return updateBranch(branch, branch.length - 1, 1e9, lastEvent.setSelAfter(sels));\n    }\n}\n// Assumes the top item has one or more selectionAfter values\nfunction popSelection(branch) {\n    let last = branch[branch.length - 1];\n    let newBranch = branch.slice();\n    newBranch[branch.length - 1] = last.setSelAfter(last.selectionsAfter.slice(0, last.selectionsAfter.length - 1));\n    return newBranch;\n}\n// Add a mapping to the top event in the given branch. If this maps\n// away all the changes and effects in that item, drop it and\n// propagate the mapping to the next item.\nfunction addMappingToBranch(branch, mapping) {\n    if (!branch.length)\n        return branch;\n    let length = branch.length, selections = none;\n    while (length) {\n        let event = mapEvent(branch[length - 1], mapping, selections);\n        if (event.changes && !event.changes.empty || event.effects.length) { // Event survived mapping\n            let result = branch.slice(0, length);\n            result[length - 1] = event;\n            return result;\n        }\n        else { // Drop this event, since there's no changes or effects left\n            mapping = event.mapped;\n            length--;\n            selections = event.selectionsAfter;\n        }\n    }\n    return selections.length ? [HistEvent.selection(selections)] : none;\n}\nfunction mapEvent(event, mapping, extraSelections) {\n    let selections = conc(event.selectionsAfter.length ? event.selectionsAfter.map(s => s.map(mapping)) : none, extraSelections);\n    // Change-less events don't store mappings (they are always the last event in a branch)\n    if (!event.changes)\n        return HistEvent.selection(selections);\n    let mappedChanges = event.changes.map(mapping), before = mapping.mapDesc(event.changes, true);\n    let fullMapping = event.mapped ? event.mapped.composeDesc(before) : before;\n    return new HistEvent(mappedChanges, StateEffect.mapEffects(event.effects, mapping), fullMapping, event.startSelection.map(before), selections);\n}\nconst joinableUserEvent = /^(input\\.type|delete)($|\\.)/;\nclass HistoryState {\n    constructor(done, undone, prevTime = 0, prevUserEvent = undefined) {\n        this.done = done;\n        this.undone = undone;\n        this.prevTime = prevTime;\n        this.prevUserEvent = prevUserEvent;\n    }\n    isolate() {\n        return this.prevTime ? new HistoryState(this.done, this.undone) : this;\n    }\n    addChanges(event, time, userEvent, config, tr) {\n        let done = this.done, lastEvent = done[done.length - 1];\n        if (lastEvent && lastEvent.changes && !lastEvent.changes.empty && event.changes &&\n            (!userEvent || joinableUserEvent.test(userEvent)) &&\n            ((!lastEvent.selectionsAfter.length &&\n                time - this.prevTime < config.newGroupDelay &&\n                config.joinToEvent(tr, isAdjacent(lastEvent.changes, event.changes))) ||\n                // For compose (but not compose.start) events, always join with previous event\n                userEvent == \"input.type.compose\")) {\n            done = updateBranch(done, done.length - 1, config.minDepth, new HistEvent(event.changes.compose(lastEvent.changes), conc(StateEffect.mapEffects(event.effects, lastEvent.changes), lastEvent.effects), lastEvent.mapped, lastEvent.startSelection, none));\n        }\n        else {\n            done = updateBranch(done, done.length, config.minDepth, event);\n        }\n        return new HistoryState(done, none, time, userEvent);\n    }\n    addSelection(selection, time, userEvent, newGroupDelay) {\n        let last = this.done.length ? this.done[this.done.length - 1].selectionsAfter : none;\n        if (last.length > 0 &&\n            time - this.prevTime < newGroupDelay &&\n            userEvent == this.prevUserEvent && userEvent && /^select($|\\.)/.test(userEvent) &&\n            eqSelectionShape(last[last.length - 1], selection))\n            return this;\n        return new HistoryState(addSelection(this.done, selection), this.undone, time, userEvent);\n    }\n    addMapping(mapping) {\n        return new HistoryState(addMappingToBranch(this.done, mapping), addMappingToBranch(this.undone, mapping), this.prevTime, this.prevUserEvent);\n    }\n    pop(side, state, onlySelection) {\n        let branch = side == 0 /* BranchName.Done */ ? this.done : this.undone;\n        if (branch.length == 0)\n            return null;\n        let event = branch[branch.length - 1], selection = event.selectionsAfter[0] || state.selection;\n        if (onlySelection && event.selectionsAfter.length) {\n            return state.update({\n                selection: event.selectionsAfter[event.selectionsAfter.length - 1],\n                annotations: fromHistory.of({ side, rest: popSelection(branch), selection }),\n                userEvent: side == 0 /* BranchName.Done */ ? \"select.undo\" : \"select.redo\",\n                scrollIntoView: true\n            });\n        }\n        else if (!event.changes) {\n            return null;\n        }\n        else {\n            let rest = branch.length == 1 ? none : branch.slice(0, branch.length - 1);\n            if (event.mapped)\n                rest = addMappingToBranch(rest, event.mapped);\n            return state.update({\n                changes: event.changes,\n                selection: event.startSelection,\n                effects: event.effects,\n                annotations: fromHistory.of({ side, rest, selection }),\n                filter: false,\n                userEvent: side == 0 /* BranchName.Done */ ? \"undo\" : \"redo\",\n                scrollIntoView: true\n            });\n        }\n    }\n}\nHistoryState.empty = /*@__PURE__*/new HistoryState(none, none);\n/**\nDefault key bindings for the undo history.\n\n- Mod-z: [`undo`](https://codemirror.net/6/docs/ref/#commands.undo).\n- Mod-y (Mod-Shift-z on macOS) + Ctrl-Shift-z on Linux: [`redo`](https://codemirror.net/6/docs/ref/#commands.redo).\n- Mod-u: [`undoSelection`](https://codemirror.net/6/docs/ref/#commands.undoSelection).\n- Alt-u (Mod-Shift-u on macOS): [`redoSelection`](https://codemirror.net/6/docs/ref/#commands.redoSelection).\n*/\nconst historyKeymap = [\n    { key: \"Mod-z\", run: undo, preventDefault: true },\n    { key: \"Mod-y\", mac: \"Mod-Shift-z\", run: redo, preventDefault: true },\n    { linux: \"Ctrl-Shift-z\", run: redo, preventDefault: true },\n    { key: \"Mod-u\", run: undoSelection, preventDefault: true },\n    { key: \"Alt-u\", mac: \"Mod-Shift-u\", run: redoSelection, preventDefault: true }\n];\n\nfunction updateSel(sel, by) {\n    return EditorSelection.create(sel.ranges.map(by), sel.mainIndex);\n}\nfunction setSel(state, selection) {\n    return state.update({ selection, scrollIntoView: true, userEvent: \"select\" });\n}\nfunction moveSel({ state, dispatch }, how) {\n    let selection = updateSel(state.selection, how);\n    if (selection.eq(state.selection, true))\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n}\nfunction rangeEnd(range, forward) {\n    return EditorSelection.cursor(forward ? range.to : range.from);\n}\nfunction cursorByChar(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveByChar(range, forward) : rangeEnd(range, forward));\n}\nfunction ltrAtCursor(view) {\n    return view.textDirectionAt(view.state.selection.main.head) == Direction.LTR;\n}\n/**\nMove the selection one character to the left (which is backward in\nleft-to-right text, forward in right-to-left text).\n*/\nconst cursorCharLeft = view => cursorByChar(view, !ltrAtCursor(view));\n/**\nMove the selection one character to the right.\n*/\nconst cursorCharRight = view => cursorByChar(view, ltrAtCursor(view));\n/**\nMove the selection one character forward.\n*/\nconst cursorCharForward = view => cursorByChar(view, true);\n/**\nMove the selection one character backward.\n*/\nconst cursorCharBackward = view => cursorByChar(view, false);\nfunction byCharLogical(state, range, forward) {\n    let pos = range.head, line = state.doc.lineAt(pos);\n    if (pos == (forward ? line.to : line.from))\n        pos = forward ? Math.min(state.doc.length, line.to + 1) : Math.max(0, line.from - 1);\n    else\n        pos = line.from + findClusterBreak(line.text, pos - line.from, forward);\n    return EditorSelection.cursor(pos, forward ? -1 : 1);\n}\nfunction moveByCharLogical(target, forward) {\n    return moveSel(target, range => range.empty ? byCharLogical(target.state, range, forward) : rangeEnd(range, forward));\n}\n/**\nMove the selection one character forward, in logical\n(non-text-direction-aware) string index order.\n*/\nconst cursorCharForwardLogical = target => moveByCharLogical(target, true);\n/**\nMove the selection one character backward, in logical string index\norder.\n*/\nconst cursorCharBackwardLogical = target => moveByCharLogical(target, false);\nfunction cursorByGroup(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveByGroup(range, forward) : rangeEnd(range, forward));\n}\n/**\nMove the selection to the left across one group of word or\nnon-word (but also non-space) characters.\n*/\nconst cursorGroupLeft = view => cursorByGroup(view, !ltrAtCursor(view));\n/**\nMove the selection one group to the right.\n*/\nconst cursorGroupRight = view => cursorByGroup(view, ltrAtCursor(view));\n/**\nMove the selection one group forward.\n*/\nconst cursorGroupForward = view => cursorByGroup(view, true);\n/**\nMove the selection one group backward.\n*/\nconst cursorGroupBackward = view => cursorByGroup(view, false);\nfunction toGroupStart(view, pos, start) {\n    let categorize = view.state.charCategorizer(pos);\n    let cat = categorize(start), initial = cat != CharCategory.Space;\n    return (next) => {\n        let nextCat = categorize(next);\n        if (nextCat != CharCategory.Space)\n            return initial && nextCat == cat;\n        initial = false;\n        return true;\n    };\n}\n/**\nMove the cursor one group forward in the default Windows style,\nwhere it moves to the start of the next group.\n*/\nconst cursorGroupForwardWin = view => {\n    return moveSel(view, range => range.empty\n        ? view.moveByChar(range, true, start => toGroupStart(view, range.head, start))\n        : rangeEnd(range, true));\n};\nconst segmenter = typeof Intl != \"undefined\" && Intl.Segmenter ?\n    /*@__PURE__*/new (Intl.Segmenter)(undefined, { granularity: \"word\" }) : null;\nfunction moveBySubword(view, range, forward) {\n    let categorize = view.state.charCategorizer(range.from);\n    let cat = CharCategory.Space, pos = range.from, steps = 0;\n    let done = false, sawUpper = false, sawLower = false;\n    let step = (next) => {\n        if (done)\n            return false;\n        pos += forward ? next.length : -next.length;\n        let nextCat = categorize(next), ahead;\n        if (nextCat == CharCategory.Word && next.charCodeAt(0) < 128 && /[\\W_]/.test(next))\n            nextCat = -1; // Treat word punctuation specially\n        if (cat == CharCategory.Space)\n            cat = nextCat;\n        if (cat != nextCat)\n            return false;\n        if (cat == CharCategory.Word) {\n            if (next.toLowerCase() == next) {\n                if (!forward && sawUpper)\n                    return false;\n                sawLower = true;\n            }\n            else if (sawLower) {\n                if (forward)\n                    return false;\n                done = true;\n            }\n            else {\n                if (sawUpper && forward && categorize(ahead = view.state.sliceDoc(pos, pos + 1)) == CharCategory.Word &&\n                    ahead.toLowerCase() == ahead)\n                    return false;\n                sawUpper = true;\n            }\n        }\n        steps++;\n        return true;\n    };\n    let end = view.moveByChar(range, forward, start => {\n        step(start);\n        return step;\n    });\n    if (segmenter && cat == CharCategory.Word && end.from == range.from + steps * (forward ? 1 : -1)) {\n        let from = Math.min(range.head, end.head), to = Math.max(range.head, end.head);\n        let skipped = view.state.sliceDoc(from, to);\n        if (skipped.length > 1 && /[\\u4E00-\\uffff]/.test(skipped)) {\n            let segments = Array.from(segmenter.segment(skipped));\n            if (segments.length > 1) {\n                if (forward)\n                    return EditorSelection.cursor(range.head + segments[1].index, -1);\n                return EditorSelection.cursor(end.head + segments[segments.length - 1].index, 1);\n            }\n        }\n    }\n    return end;\n}\nfunction cursorBySubword(view, forward) {\n    return moveSel(view, range => range.empty ? moveBySubword(view, range, forward) : rangeEnd(range, forward));\n}\n/**\nMove the selection one group or camel-case subword forward.\n*/\nconst cursorSubwordForward = view => cursorBySubword(view, true);\n/**\nMove the selection one group or camel-case subword backward.\n*/\nconst cursorSubwordBackward = view => cursorBySubword(view, false);\nfunction interestingNode(state, node, bracketProp) {\n    if (node.type.prop(bracketProp))\n        return true;\n    let len = node.to - node.from;\n    return len && (len > 2 || /[^\\s,.;:]/.test(state.sliceDoc(node.from, node.to))) || node.firstChild;\n}\nfunction moveBySyntax(state, start, forward) {\n    let pos = syntaxTree(state).resolveInner(start.head);\n    let bracketProp = forward ? NodeProp.closedBy : NodeProp.openedBy;\n    // Scan forward through child nodes to see if there's an interesting\n    // node ahead.\n    for (let at = start.head;;) {\n        let next = forward ? pos.childAfter(at) : pos.childBefore(at);\n        if (!next)\n            break;\n        if (interestingNode(state, next, bracketProp))\n            pos = next;\n        else\n            at = forward ? next.to : next.from;\n    }\n    let bracket = pos.type.prop(bracketProp), match, newPos;\n    if (bracket && (match = forward ? matchBrackets(state, pos.from, 1) : matchBrackets(state, pos.to, -1)) && match.matched)\n        newPos = forward ? match.end.to : match.end.from;\n    else\n        newPos = forward ? pos.to : pos.from;\n    return EditorSelection.cursor(newPos, forward ? -1 : 1);\n}\n/**\nMove the cursor over the next syntactic element to the left.\n*/\nconst cursorSyntaxLeft = view => moveSel(view, range => moveBySyntax(view.state, range, !ltrAtCursor(view)));\n/**\nMove the cursor over the next syntactic element to the right.\n*/\nconst cursorSyntaxRight = view => moveSel(view, range => moveBySyntax(view.state, range, ltrAtCursor(view)));\nfunction cursorByLine(view, forward) {\n    return moveSel(view, range => {\n        if (!range.empty)\n            return rangeEnd(range, forward);\n        let moved = view.moveVertically(range, forward);\n        return moved.head != range.head ? moved : view.moveToLineBoundary(range, forward);\n    });\n}\n/**\nMove the selection one line up.\n*/\nconst cursorLineUp = view => cursorByLine(view, false);\n/**\nMove the selection one line down.\n*/\nconst cursorLineDown = view => cursorByLine(view, true);\nfunction pageInfo(view) {\n    let selfScroll = view.scrollDOM.clientHeight < view.scrollDOM.scrollHeight - 2;\n    let marginTop = 0, marginBottom = 0, height;\n    if (selfScroll) {\n        for (let source of view.state.facet(EditorView.scrollMargins)) {\n            let margins = source(view);\n            if (margins === null || margins === void 0 ? void 0 : margins.top)\n                marginTop = Math.max(margins === null || margins === void 0 ? void 0 : margins.top, marginTop);\n            if (margins === null || margins === void 0 ? void 0 : margins.bottom)\n                marginBottom = Math.max(margins === null || margins === void 0 ? void 0 : margins.bottom, marginBottom);\n        }\n        height = view.scrollDOM.clientHeight - marginTop - marginBottom;\n    }\n    else {\n        height = (view.dom.ownerDocument.defaultView || window).innerHeight;\n    }\n    return { marginTop, marginBottom, selfScroll,\n        height: Math.max(view.defaultLineHeight, height - 5) };\n}\nfunction cursorByPage(view, forward) {\n    let page = pageInfo(view);\n    let { state } = view, selection = updateSel(state.selection, range => {\n        return range.empty ? view.moveVertically(range, forward, page.height)\n            : rangeEnd(range, forward);\n    });\n    if (selection.eq(state.selection))\n        return false;\n    let effect;\n    if (page.selfScroll) {\n        let startPos = view.coordsAtPos(state.selection.main.head);\n        let scrollRect = view.scrollDOM.getBoundingClientRect();\n        let scrollTop = scrollRect.top + page.marginTop, scrollBottom = scrollRect.bottom - page.marginBottom;\n        if (startPos && startPos.top > scrollTop && startPos.bottom < scrollBottom)\n            effect = EditorView.scrollIntoView(selection.main.head, { y: \"start\", yMargin: startPos.top - scrollTop });\n    }\n    view.dispatch(setSel(state, selection), { effects: effect });\n    return true;\n}\n/**\nMove the selection one page up.\n*/\nconst cursorPageUp = view => cursorByPage(view, false);\n/**\nMove the selection one page down.\n*/\nconst cursorPageDown = view => cursorByPage(view, true);\nfunction moveByLineBoundary(view, start, forward) {\n    let line = view.lineBlockAt(start.head), moved = view.moveToLineBoundary(start, forward);\n    if (moved.head == start.head && moved.head != (forward ? line.to : line.from))\n        moved = view.moveToLineBoundary(start, forward, false);\n    if (!forward && moved.head == line.from && line.length) {\n        let space = /^\\s*/.exec(view.state.sliceDoc(line.from, Math.min(line.from + 100, line.to)))[0].length;\n        if (space && start.head != line.from + space)\n            moved = EditorSelection.cursor(line.from + space);\n    }\n    return moved;\n}\n/**\nMove the selection to the next line wrap point, or to the end of\nthe line if there isn't one left on this line.\n*/\nconst cursorLineBoundaryForward = view => moveSel(view, range => moveByLineBoundary(view, range, true));\n/**\nMove the selection to previous line wrap point, or failing that to\nthe start of the line. If the line is indented, and the cursor\nisn't already at the end of the indentation, this will move to the\nend of the indentation instead of the start of the line.\n*/\nconst cursorLineBoundaryBackward = view => moveSel(view, range => moveByLineBoundary(view, range, false));\n/**\nMove the selection one line wrap point to the left.\n*/\nconst cursorLineBoundaryLeft = view => moveSel(view, range => moveByLineBoundary(view, range, !ltrAtCursor(view)));\n/**\nMove the selection one line wrap point to the right.\n*/\nconst cursorLineBoundaryRight = view => moveSel(view, range => moveByLineBoundary(view, range, ltrAtCursor(view)));\n/**\nMove the selection to the start of the line.\n*/\nconst cursorLineStart = view => moveSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).from, 1));\n/**\nMove the selection to the end of the line.\n*/\nconst cursorLineEnd = view => moveSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).to, -1));\nfunction toMatchingBracket(state, dispatch, extend) {\n    let found = false, selection = updateSel(state.selection, range => {\n        let matching = matchBrackets(state, range.head, -1)\n            || matchBrackets(state, range.head, 1)\n            || (range.head > 0 && matchBrackets(state, range.head - 1, 1))\n            || (range.head < state.doc.length && matchBrackets(state, range.head + 1, -1));\n        if (!matching || !matching.end)\n            return range;\n        found = true;\n        let head = matching.start.from == range.head ? matching.end.to : matching.end.from;\n        return extend ? EditorSelection.range(range.anchor, head) : EditorSelection.cursor(head);\n    });\n    if (!found)\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n}\n/**\nMove the selection to the bracket matching the one it is currently\non, if any.\n*/\nconst cursorMatchingBracket = ({ state, dispatch }) => toMatchingBracket(state, dispatch, false);\n/**\nExtend the selection to the bracket matching the one the selection\nhead is currently on, if any.\n*/\nconst selectMatchingBracket = ({ state, dispatch }) => toMatchingBracket(state, dispatch, true);\nfunction extendSel(target, how) {\n    let selection = updateSel(target.state.selection, range => {\n        let head = how(range);\n        return EditorSelection.range(range.anchor, head.head, head.goalColumn, head.bidiLevel || undefined);\n    });\n    if (selection.eq(target.state.selection))\n        return false;\n    target.dispatch(setSel(target.state, selection));\n    return true;\n}\nfunction selectByChar(view, forward) {\n    return extendSel(view, range => view.moveByChar(range, forward));\n}\n/**\nMove the selection head one character to the left, while leaving\nthe anchor in place.\n*/\nconst selectCharLeft = view => selectByChar(view, !ltrAtCursor(view));\n/**\nMove the selection head one character to the right.\n*/\nconst selectCharRight = view => selectByChar(view, ltrAtCursor(view));\n/**\nMove the selection head one character forward.\n*/\nconst selectCharForward = view => selectByChar(view, true);\n/**\nMove the selection head one character backward.\n*/\nconst selectCharBackward = view => selectByChar(view, false);\n/**\nMove the selection head one character forward by logical\n(non-direction aware) string index order.\n*/\nconst selectCharForwardLogical = target => extendSel(target, range => byCharLogical(target.state, range, true));\n/**\nMove the selection head one character backward by logical string\nindex order.\n*/\nconst selectCharBackwardLogical = target => extendSel(target, range => byCharLogical(target.state, range, false));\nfunction selectByGroup(view, forward) {\n    return extendSel(view, range => view.moveByGroup(range, forward));\n}\n/**\nMove the selection head one [group](https://codemirror.net/6/docs/ref/#commands.cursorGroupLeft) to\nthe left.\n*/\nconst selectGroupLeft = view => selectByGroup(view, !ltrAtCursor(view));\n/**\nMove the selection head one group to the right.\n*/\nconst selectGroupRight = view => selectByGroup(view, ltrAtCursor(view));\n/**\nMove the selection head one group forward.\n*/\nconst selectGroupForward = view => selectByGroup(view, true);\n/**\nMove the selection head one group backward.\n*/\nconst selectGroupBackward = view => selectByGroup(view, false);\n/**\nMove the selection head one group forward in the default Windows\nstyle, skipping to the start of the next group.\n*/\nconst selectGroupForwardWin = view => {\n    return extendSel(view, range => view.moveByChar(range, true, start => toGroupStart(view, range.head, start)));\n};\nfunction selectBySubword(view, forward) {\n    return extendSel(view, range => moveBySubword(view, range, forward));\n}\n/**\nMove the selection head one group or camel-case subword forward.\n*/\nconst selectSubwordForward = view => selectBySubword(view, true);\n/**\nMove the selection head one group or subword backward.\n*/\nconst selectSubwordBackward = view => selectBySubword(view, false);\n/**\nMove the selection head over the next syntactic element to the left.\n*/\nconst selectSyntaxLeft = view => extendSel(view, range => moveBySyntax(view.state, range, !ltrAtCursor(view)));\n/**\nMove the selection head over the next syntactic element to the right.\n*/\nconst selectSyntaxRight = view => extendSel(view, range => moveBySyntax(view.state, range, ltrAtCursor(view)));\nfunction selectByLine(view, forward) {\n    return extendSel(view, range => view.moveVertically(range, forward));\n}\n/**\nMove the selection head one line up.\n*/\nconst selectLineUp = view => selectByLine(view, false);\n/**\nMove the selection head one line down.\n*/\nconst selectLineDown = view => selectByLine(view, true);\nfunction selectByPage(view, forward) {\n    return extendSel(view, range => view.moveVertically(range, forward, pageInfo(view).height));\n}\n/**\nMove the selection head one page up.\n*/\nconst selectPageUp = view => selectByPage(view, false);\n/**\nMove the selection head one page down.\n*/\nconst selectPageDown = view => selectByPage(view, true);\n/**\nMove the selection head to the next line boundary.\n*/\nconst selectLineBoundaryForward = view => extendSel(view, range => moveByLineBoundary(view, range, true));\n/**\nMove the selection head to the previous line boundary.\n*/\nconst selectLineBoundaryBackward = view => extendSel(view, range => moveByLineBoundary(view, range, false));\n/**\nMove the selection head one line boundary to the left.\n*/\nconst selectLineBoundaryLeft = view => extendSel(view, range => moveByLineBoundary(view, range, !ltrAtCursor(view)));\n/**\nMove the selection head one line boundary to the right.\n*/\nconst selectLineBoundaryRight = view => extendSel(view, range => moveByLineBoundary(view, range, ltrAtCursor(view)));\n/**\nMove the selection head to the start of the line.\n*/\nconst selectLineStart = view => extendSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).from));\n/**\nMove the selection head to the end of the line.\n*/\nconst selectLineEnd = view => extendSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).to));\n/**\nMove the selection to the start of the document.\n*/\nconst cursorDocStart = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: 0 }));\n    return true;\n};\n/**\nMove the selection to the end of the document.\n*/\nconst cursorDocEnd = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.doc.length }));\n    return true;\n};\n/**\nMove the selection head to the start of the document.\n*/\nconst selectDocStart = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.selection.main.anchor, head: 0 }));\n    return true;\n};\n/**\nMove the selection head to the end of the document.\n*/\nconst selectDocEnd = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.selection.main.anchor, head: state.doc.length }));\n    return true;\n};\n/**\nSelect the entire document.\n*/\nconst selectAll = ({ state, dispatch }) => {\n    dispatch(state.update({ selection: { anchor: 0, head: state.doc.length }, userEvent: \"select\" }));\n    return true;\n};\n/**\nExpand the selection to cover entire lines.\n*/\nconst selectLine = ({ state, dispatch }) => {\n    let ranges = selectedLineBlocks(state).map(({ from, to }) => EditorSelection.range(from, Math.min(to + 1, state.doc.length)));\n    dispatch(state.update({ selection: EditorSelection.create(ranges), userEvent: \"select\" }));\n    return true;\n};\n/**\nSelect the next syntactic construct that is larger than the\nselection. Note that this will only work insofar as the language\n[provider](https://codemirror.net/6/docs/ref/#language.language) you use builds up a full\nsyntax tree.\n*/\nconst selectParentSyntax = ({ state, dispatch }) => {\n    let selection = updateSel(state.selection, range => {\n        let tree = syntaxTree(state), stack = tree.resolveStack(range.from, 1);\n        if (range.empty) {\n            let stackBefore = tree.resolveStack(range.from, -1);\n            if (stackBefore.node.from >= stack.node.from && stackBefore.node.to <= stack.node.to)\n                stack = stackBefore;\n        }\n        for (let cur = stack; cur; cur = cur.next) {\n            let { node } = cur;\n            if (((node.from < range.from && node.to >= range.to) ||\n                (node.to > range.to && node.from <= range.from)) &&\n                cur.next)\n                return EditorSelection.range(node.to, node.from);\n        }\n        return range;\n    });\n    if (selection.eq(state.selection))\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n};\n/**\nSimplify the current selection. When multiple ranges are selected,\nreduce it to its main range. Otherwise, if the selection is\nnon-empty, convert it to a cursor selection.\n*/\nconst simplifySelection = ({ state, dispatch }) => {\n    let cur = state.selection, selection = null;\n    if (cur.ranges.length > 1)\n        selection = EditorSelection.create([cur.main]);\n    else if (!cur.main.empty)\n        selection = EditorSelection.create([EditorSelection.cursor(cur.main.head)]);\n    if (!selection)\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n};\nfunction deleteBy(target, by) {\n    if (target.state.readOnly)\n        return false;\n    let event = \"delete.selection\", { state } = target;\n    let changes = state.changeByRange(range => {\n        let { from, to } = range;\n        if (from == to) {\n            let towards = by(range);\n            if (towards < from) {\n                event = \"delete.backward\";\n                towards = skipAtomic(target, towards, false);\n            }\n            else if (towards > from) {\n                event = \"delete.forward\";\n                towards = skipAtomic(target, towards, true);\n            }\n            from = Math.min(from, towards);\n            to = Math.max(to, towards);\n        }\n        else {\n            from = skipAtomic(target, from, false);\n            to = skipAtomic(target, to, true);\n        }\n        return from == to ? { range } : { changes: { from, to }, range: EditorSelection.cursor(from, from < range.head ? -1 : 1) };\n    });\n    if (changes.changes.empty)\n        return false;\n    target.dispatch(state.update(changes, {\n        scrollIntoView: true,\n        userEvent: event,\n        effects: event == \"delete.selection\" ? EditorView.announce.of(state.phrase(\"Selection deleted\")) : undefined\n    }));\n    return true;\n}\nfunction skipAtomic(target, pos, forward) {\n    if (target instanceof EditorView)\n        for (let ranges of target.state.facet(EditorView.atomicRanges).map(f => f(target)))\n            ranges.between(pos, pos, (from, to) => {\n                if (from < pos && to > pos)\n                    pos = forward ? to : from;\n            });\n    return pos;\n}\nconst deleteByChar = (target, forward, byIndentUnit) => deleteBy(target, range => {\n    let pos = range.from, { state } = target, line = state.doc.lineAt(pos), before, targetPos;\n    if (byIndentUnit && !forward && pos > line.from && pos < line.from + 200 &&\n        !/[^ \\t]/.test(before = line.text.slice(0, pos - line.from))) {\n        if (before[before.length - 1] == \"\\t\")\n            return pos - 1;\n        let col = countColumn(before, state.tabSize), drop = col % getIndentUnit(state) || getIndentUnit(state);\n        for (let i = 0; i < drop && before[before.length - 1 - i] == \" \"; i++)\n            pos--;\n        targetPos = pos;\n    }\n    else {\n        targetPos = findClusterBreak(line.text, pos - line.from, forward, forward) + line.from;\n        if (targetPos == pos && line.number != (forward ? state.doc.lines : 1))\n            targetPos += forward ? 1 : -1;\n        else if (!forward && /[\\ufe00-\\ufe0f]/.test(line.text.slice(targetPos - line.from, pos - line.from)))\n            targetPos = findClusterBreak(line.text, targetPos - line.from, false, false) + line.from;\n    }\n    return targetPos;\n});\n/**\nDelete the selection, or, for cursor selections, the character or\nindentation unit before the cursor.\n*/\nconst deleteCharBackward = view => deleteByChar(view, false, true);\n/**\nDelete the selection or the character before the cursor. Does not\nimplement any extended behavior like deleting whole indentation\nunits in one go.\n*/\nconst deleteCharBackwardStrict = view => deleteByChar(view, false, false);\n/**\nDelete the selection or the character after the cursor.\n*/\nconst deleteCharForward = view => deleteByChar(view, true, false);\nconst deleteByGroup = (target, forward) => deleteBy(target, range => {\n    let pos = range.head, { state } = target, line = state.doc.lineAt(pos);\n    let categorize = state.charCategorizer(pos);\n    for (let cat = null;;) {\n        if (pos == (forward ? line.to : line.from)) {\n            if (pos == range.head && line.number != (forward ? state.doc.lines : 1))\n                pos += forward ? 1 : -1;\n            break;\n        }\n        let next = findClusterBreak(line.text, pos - line.from, forward) + line.from;\n        let nextChar = line.text.slice(Math.min(pos, next) - line.from, Math.max(pos, next) - line.from);\n        let nextCat = categorize(nextChar);\n        if (cat != null && nextCat != cat)\n            break;\n        if (nextChar != \" \" || pos != range.head)\n            cat = nextCat;\n        pos = next;\n    }\n    return pos;\n});\n/**\nDelete the selection or backward until the end of the next\n[group](https://codemirror.net/6/docs/ref/#view.EditorView.moveByGroup), only skipping groups of\nwhitespace when they consist of a single space.\n*/\nconst deleteGroupBackward = target => deleteByGroup(target, false);\n/**\nDelete the selection or forward until the end of the next group.\n*/\nconst deleteGroupForward = target => deleteByGroup(target, true);\n/**\nDelete the selection, or, if it is a cursor selection, delete to\nthe end of the line. If the cursor is directly at the end of the\nline, delete the line break after it.\n*/\nconst deleteToLineEnd = view => deleteBy(view, range => {\n    let lineEnd = view.lineBlockAt(range.head).to;\n    return range.head < lineEnd ? lineEnd : Math.min(view.state.doc.length, range.head + 1);\n});\n/**\nDelete the selection, or, if it is a cursor selection, delete to\nthe start of the line. If the cursor is directly at the start of the\nline, delete the line break before it.\n*/\nconst deleteToLineStart = view => deleteBy(view, range => {\n    let lineStart = view.lineBlockAt(range.head).from;\n    return range.head > lineStart ? lineStart : Math.max(0, range.head - 1);\n});\n/**\nDelete the selection, or, if it is a cursor selection, delete to\nthe start of the line or the next line wrap before the cursor.\n*/\nconst deleteLineBoundaryBackward = view => deleteBy(view, range => {\n    let lineStart = view.moveToLineBoundary(range, false).head;\n    return range.head > lineStart ? lineStart : Math.max(0, range.head - 1);\n});\n/**\nDelete the selection, or, if it is a cursor selection, delete to\nthe end of the line or the next line wrap after the cursor.\n*/\nconst deleteLineBoundaryForward = view => deleteBy(view, range => {\n    let lineStart = view.moveToLineBoundary(range, true).head;\n    return range.head < lineStart ? lineStart : Math.min(view.state.doc.length, range.head + 1);\n});\n/**\nDelete all whitespace directly before a line end from the\ndocument.\n*/\nconst deleteTrailingWhitespace = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let changes = [];\n    for (let pos = 0, prev = \"\", iter = state.doc.iter();;) {\n        iter.next();\n        if (iter.lineBreak || iter.done) {\n            let trailing = prev.search(/\\s+$/);\n            if (trailing > -1)\n                changes.push({ from: pos - (prev.length - trailing), to: pos });\n            if (iter.done)\n                break;\n            prev = \"\";\n        }\n        else {\n            prev = iter.value;\n        }\n        pos += iter.value.length;\n    }\n    if (!changes.length)\n        return false;\n    dispatch(state.update({ changes, userEvent: \"delete\" }));\n    return true;\n};\n/**\nReplace each selection range with a line break, leaving the cursor\non the line before the break.\n*/\nconst splitLine = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let changes = state.changeByRange(range => {\n        return { changes: { from: range.from, to: range.to, insert: Text.of([\"\", \"\"]) },\n            range: EditorSelection.cursor(range.from) };\n    });\n    dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\n/**\nFlip the characters before and after the cursor(s).\n*/\nconst transposeChars = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let changes = state.changeByRange(range => {\n        if (!range.empty || range.from == 0 || range.from == state.doc.length)\n            return { range };\n        let pos = range.from, line = state.doc.lineAt(pos);\n        let from = pos == line.from ? pos - 1 : findClusterBreak(line.text, pos - line.from, false) + line.from;\n        let to = pos == line.to ? pos + 1 : findClusterBreak(line.text, pos - line.from, true) + line.from;\n        return { changes: { from, to, insert: state.doc.slice(pos, to).append(state.doc.slice(from, pos)) },\n            range: EditorSelection.cursor(to) };\n    });\n    if (changes.changes.empty)\n        return false;\n    dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"move.character\" }));\n    return true;\n};\nfunction selectedLineBlocks(state) {\n    let blocks = [], upto = -1;\n    for (let range of state.selection.ranges) {\n        let startLine = state.doc.lineAt(range.from), endLine = state.doc.lineAt(range.to);\n        if (!range.empty && range.to == endLine.from)\n            endLine = state.doc.lineAt(range.to - 1);\n        if (upto >= startLine.number) {\n            let prev = blocks[blocks.length - 1];\n            prev.to = endLine.to;\n            prev.ranges.push(range);\n        }\n        else {\n            blocks.push({ from: startLine.from, to: endLine.to, ranges: [range] });\n        }\n        upto = endLine.number + 1;\n    }\n    return blocks;\n}\nfunction moveLine(state, dispatch, forward) {\n    if (state.readOnly)\n        return false;\n    let changes = [], ranges = [];\n    for (let block of selectedLineBlocks(state)) {\n        if (forward ? block.to == state.doc.length : block.from == 0)\n            continue;\n        let nextLine = state.doc.lineAt(forward ? block.to + 1 : block.from - 1);\n        let size = nextLine.length + 1;\n        if (forward) {\n            changes.push({ from: block.to, to: nextLine.to }, { from: block.from, insert: nextLine.text + state.lineBreak });\n            for (let r of block.ranges)\n                ranges.push(EditorSelection.range(Math.min(state.doc.length, r.anchor + size), Math.min(state.doc.length, r.head + size)));\n        }\n        else {\n            changes.push({ from: nextLine.from, to: block.from }, { from: block.to, insert: state.lineBreak + nextLine.text });\n            for (let r of block.ranges)\n                ranges.push(EditorSelection.range(r.anchor - size, r.head - size));\n        }\n    }\n    if (!changes.length)\n        return false;\n    dispatch(state.update({\n        changes,\n        scrollIntoView: true,\n        selection: EditorSelection.create(ranges, state.selection.mainIndex),\n        userEvent: \"move.line\"\n    }));\n    return true;\n}\n/**\nMove the selected lines up one line.\n*/\nconst moveLineUp = ({ state, dispatch }) => moveLine(state, dispatch, false);\n/**\nMove the selected lines down one line.\n*/\nconst moveLineDown = ({ state, dispatch }) => moveLine(state, dispatch, true);\nfunction copyLine(state, dispatch, forward) {\n    if (state.readOnly)\n        return false;\n    let changes = [];\n    for (let block of selectedLineBlocks(state)) {\n        if (forward)\n            changes.push({ from: block.from, insert: state.doc.slice(block.from, block.to) + state.lineBreak });\n        else\n            changes.push({ from: block.to, insert: state.lineBreak + state.doc.slice(block.from, block.to) });\n    }\n    dispatch(state.update({ changes, scrollIntoView: true, userEvent: \"input.copyline\" }));\n    return true;\n}\n/**\nCreate a copy of the selected lines. Keep the selection in the top copy.\n*/\nconst copyLineUp = ({ state, dispatch }) => copyLine(state, dispatch, false);\n/**\nCreate a copy of the selected lines. Keep the selection in the bottom copy.\n*/\nconst copyLineDown = ({ state, dispatch }) => copyLine(state, dispatch, true);\n/**\nDelete selected lines.\n*/\nconst deleteLine = view => {\n    if (view.state.readOnly)\n        return false;\n    let { state } = view, changes = state.changes(selectedLineBlocks(state).map(({ from, to }) => {\n        if (from > 0)\n            from--;\n        else if (to < state.doc.length)\n            to++;\n        return { from, to };\n    }));\n    let selection = updateSel(state.selection, range => {\n        let dist = undefined;\n        if (view.lineWrapping) {\n            let block = view.lineBlockAt(range.head), pos = view.coordsAtPos(range.head, range.assoc || 1);\n            if (pos)\n                dist = (block.bottom + view.documentTop) - pos.bottom + view.defaultLineHeight / 2;\n        }\n        return view.moveVertically(range, true, dist);\n    }).map(changes);\n    view.dispatch({ changes, selection, scrollIntoView: true, userEvent: \"delete.line\" });\n    return true;\n};\n/**\nReplace the selection with a newline.\n*/\nconst insertNewline = ({ state, dispatch }) => {\n    dispatch(state.update(state.replaceSelection(state.lineBreak), { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\n/**\nReplace the selection with a newline and the same amount of\nindentation as the line above.\n*/\nconst insertNewlineKeepIndent = ({ state, dispatch }) => {\n    dispatch(state.update(state.changeByRange(range => {\n        let indent = /^\\s*/.exec(state.doc.lineAt(range.from).text)[0];\n        return {\n            changes: { from: range.from, to: range.to, insert: state.lineBreak + indent },\n            range: EditorSelection.cursor(range.from + indent.length + 1)\n        };\n    }), { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\nfunction isBetweenBrackets(state, pos) {\n    if (/\\(\\)|\\[\\]|\\{\\}/.test(state.sliceDoc(pos - 1, pos + 1)))\n        return { from: pos, to: pos };\n    let context = syntaxTree(state).resolveInner(pos);\n    let before = context.childBefore(pos), after = context.childAfter(pos), closedBy;\n    if (before && after && before.to <= pos && after.from >= pos &&\n        (closedBy = before.type.prop(NodeProp.closedBy)) && closedBy.indexOf(after.name) > -1 &&\n        state.doc.lineAt(before.to).from == state.doc.lineAt(after.from).from &&\n        !/\\S/.test(state.sliceDoc(before.to, after.from)))\n        return { from: before.to, to: after.from };\n    return null;\n}\n/**\nReplace the selection with a newline and indent the newly created\nline(s). If the current line consists only of whitespace, this\nwill also delete that whitespace. When the cursor is between\nmatching brackets, an additional newline will be inserted after\nthe cursor.\n*/\nconst insertNewlineAndIndent = /*@__PURE__*/newlineAndIndent(false);\n/**\nCreate a blank, indented line below the current line.\n*/\nconst insertBlankLine = /*@__PURE__*/newlineAndIndent(true);\nfunction newlineAndIndent(atEof) {\n    return ({ state, dispatch }) => {\n        if (state.readOnly)\n            return false;\n        let changes = state.changeByRange(range => {\n            let { from, to } = range, line = state.doc.lineAt(from);\n            let explode = !atEof && from == to && isBetweenBrackets(state, from);\n            if (atEof)\n                from = to = (to <= line.to ? line : state.doc.lineAt(to)).to;\n            let cx = new IndentContext(state, { simulateBreak: from, simulateDoubleBreak: !!explode });\n            let indent = getIndentation(cx, from);\n            if (indent == null)\n                indent = countColumn(/^\\s*/.exec(state.doc.lineAt(from).text)[0], state.tabSize);\n            while (to < line.to && /\\s/.test(line.text[to - line.from]))\n                to++;\n            if (explode)\n                ({ from, to } = explode);\n            else if (from > line.from && from < line.from + 100 && !/\\S/.test(line.text.slice(0, from)))\n                from = line.from;\n            let insert = [\"\", indentString(state, indent)];\n            if (explode)\n                insert.push(indentString(state, cx.lineIndent(line.from, -1)));\n            return { changes: { from, to, insert: Text.of(insert) },\n                range: EditorSelection.cursor(from + 1 + insert[1].length) };\n        });\n        dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"input\" }));\n        return true;\n    };\n}\nfunction changeBySelectedLine(state, f) {\n    let atLine = -1;\n    return state.changeByRange(range => {\n        let changes = [];\n        for (let pos = range.from; pos <= range.to;) {\n            let line = state.doc.lineAt(pos);\n            if (line.number > atLine && (range.empty || range.to > line.from)) {\n                f(line, changes, range);\n                atLine = line.number;\n            }\n            pos = line.to + 1;\n        }\n        let changeSet = state.changes(changes);\n        return { changes,\n            range: EditorSelection.range(changeSet.mapPos(range.anchor, 1), changeSet.mapPos(range.head, 1)) };\n    });\n}\n/**\nAuto-indent the selected lines. This uses the [indentation service\nfacet](https://codemirror.net/6/docs/ref/#language.indentService) as source for auto-indent\ninformation.\n*/\nconst indentSelection = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let updated = Object.create(null);\n    let context = new IndentContext(state, { overrideIndentation: start => {\n            let found = updated[start];\n            return found == null ? -1 : found;\n        } });\n    let changes = changeBySelectedLine(state, (line, changes, range) => {\n        let indent = getIndentation(context, line.from);\n        if (indent == null)\n            return;\n        if (!/\\S/.test(line.text))\n            indent = 0;\n        let cur = /^\\s*/.exec(line.text)[0];\n        let norm = indentString(state, indent);\n        if (cur != norm || range.from < line.from + cur.length) {\n            updated[line.from] = indent;\n            changes.push({ from: line.from, to: line.from + cur.length, insert: norm });\n        }\n    });\n    if (!changes.changes.empty)\n        dispatch(state.update(changes, { userEvent: \"indent\" }));\n    return true;\n};\n/**\nAdd a [unit](https://codemirror.net/6/docs/ref/#language.indentUnit) of indentation to all selected\nlines.\n*/\nconst indentMore = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    dispatch(state.update(changeBySelectedLine(state, (line, changes) => {\n        changes.push({ from: line.from, insert: state.facet(indentUnit) });\n    }), { userEvent: \"input.indent\" }));\n    return true;\n};\n/**\nRemove a [unit](https://codemirror.net/6/docs/ref/#language.indentUnit) of indentation from all\nselected lines.\n*/\nconst indentLess = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    dispatch(state.update(changeBySelectedLine(state, (line, changes) => {\n        let space = /^\\s*/.exec(line.text)[0];\n        if (!space)\n            return;\n        let col = countColumn(space, state.tabSize), keep = 0;\n        let insert = indentString(state, Math.max(0, col - getIndentUnit(state)));\n        while (keep < space.length && keep < insert.length && space.charCodeAt(keep) == insert.charCodeAt(keep))\n            keep++;\n        changes.push({ from: line.from + keep, to: line.from + space.length, insert: insert.slice(keep) });\n    }), { userEvent: \"delete.dedent\" }));\n    return true;\n};\n/**\nEnables or disables\n[tab-focus mode](https://codemirror.net/6/docs/ref/#view.EditorView.setTabFocusMode). While on, this\nprevents the editor's key bindings from capturing Tab or\nShift-Tab, making it possible for the user to move focus out of\nthe editor with the keyboard.\n*/\nconst toggleTabFocusMode = view => {\n    view.setTabFocusMode();\n    return true;\n};\n/**\nTemporarily enables [tab-focus\nmode](https://codemirror.net/6/docs/ref/#view.EditorView.setTabFocusMode) for two seconds or until\nanother key is pressed.\n*/\nconst temporarilySetTabFocusMode = view => {\n    view.setTabFocusMode(2000);\n    return true;\n};\n/**\nInsert a tab character at the cursor or, if something is selected,\nuse [`indentMore`](https://codemirror.net/6/docs/ref/#commands.indentMore) to indent the entire\nselection.\n*/\nconst insertTab = ({ state, dispatch }) => {\n    if (state.selection.ranges.some(r => !r.empty))\n        return indentMore({ state, dispatch });\n    dispatch(state.update(state.replaceSelection(\"\\t\"), { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\n/**\nArray of key bindings containing the Emacs-style bindings that are\navailable on macOS by default.\n\n - Ctrl-b: [`cursorCharLeft`](https://codemirror.net/6/docs/ref/#commands.cursorCharLeft) ([`selectCharLeft`](https://codemirror.net/6/docs/ref/#commands.selectCharLeft) with Shift)\n - Ctrl-f: [`cursorCharRight`](https://codemirror.net/6/docs/ref/#commands.cursorCharRight) ([`selectCharRight`](https://codemirror.net/6/docs/ref/#commands.selectCharRight) with Shift)\n - Ctrl-p: [`cursorLineUp`](https://codemirror.net/6/docs/ref/#commands.cursorLineUp) ([`selectLineUp`](https://codemirror.net/6/docs/ref/#commands.selectLineUp) with Shift)\n - Ctrl-n: [`cursorLineDown`](https://codemirror.net/6/docs/ref/#commands.cursorLineDown) ([`selectLineDown`](https://codemirror.net/6/docs/ref/#commands.selectLineDown) with Shift)\n - Ctrl-a: [`cursorLineStart`](https://codemirror.net/6/docs/ref/#commands.cursorLineStart) ([`selectLineStart`](https://codemirror.net/6/docs/ref/#commands.selectLineStart) with Shift)\n - Ctrl-e: [`cursorLineEnd`](https://codemirror.net/6/docs/ref/#commands.cursorLineEnd) ([`selectLineEnd`](https://codemirror.net/6/docs/ref/#commands.selectLineEnd) with Shift)\n - Ctrl-d: [`deleteCharForward`](https://codemirror.net/6/docs/ref/#commands.deleteCharForward)\n - Ctrl-h: [`deleteCharBackward`](https://codemirror.net/6/docs/ref/#commands.deleteCharBackward)\n - Ctrl-k: [`deleteToLineEnd`](https://codemirror.net/6/docs/ref/#commands.deleteToLineEnd)\n - Ctrl-Alt-h: [`deleteGroupBackward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupBackward)\n - Ctrl-o: [`splitLine`](https://codemirror.net/6/docs/ref/#commands.splitLine)\n - Ctrl-t: [`transposeChars`](https://codemirror.net/6/docs/ref/#commands.transposeChars)\n - Ctrl-v: [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown)\n - Alt-v: [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp)\n*/\nconst emacsStyleKeymap = [\n    { key: \"Ctrl-b\", run: cursorCharLeft, shift: selectCharLeft, preventDefault: true },\n    { key: \"Ctrl-f\", run: cursorCharRight, shift: selectCharRight },\n    { key: \"Ctrl-p\", run: cursorLineUp, shift: selectLineUp },\n    { key: \"Ctrl-n\", run: cursorLineDown, shift: selectLineDown },\n    { key: \"Ctrl-a\", run: cursorLineStart, shift: selectLineStart },\n    { key: \"Ctrl-e\", run: cursorLineEnd, shift: selectLineEnd },\n    { key: \"Ctrl-d\", run: deleteCharForward },\n    { key: \"Ctrl-h\", run: deleteCharBackward },\n    { key: \"Ctrl-k\", run: deleteToLineEnd },\n    { key: \"Ctrl-Alt-h\", run: deleteGroupBackward },\n    { key: \"Ctrl-o\", run: splitLine },\n    { key: \"Ctrl-t\", run: transposeChars },\n    { key: \"Ctrl-v\", run: cursorPageDown },\n];\n/**\nAn array of key bindings closely sticking to platform-standard or\nwidely used bindings. (This includes the bindings from\n[`emacsStyleKeymap`](https://codemirror.net/6/docs/ref/#commands.emacsStyleKeymap), with their `key`\nproperty changed to `mac`.)\n\n - ArrowLeft: [`cursorCharLeft`](https://codemirror.net/6/docs/ref/#commands.cursorCharLeft) ([`selectCharLeft`](https://codemirror.net/6/docs/ref/#commands.selectCharLeft) with Shift)\n - ArrowRight: [`cursorCharRight`](https://codemirror.net/6/docs/ref/#commands.cursorCharRight) ([`selectCharRight`](https://codemirror.net/6/docs/ref/#commands.selectCharRight) with Shift)\n - Ctrl-ArrowLeft (Alt-ArrowLeft on macOS): [`cursorGroupLeft`](https://codemirror.net/6/docs/ref/#commands.cursorGroupLeft) ([`selectGroupLeft`](https://codemirror.net/6/docs/ref/#commands.selectGroupLeft) with Shift)\n - Ctrl-ArrowRight (Alt-ArrowRight on macOS): [`cursorGroupRight`](https://codemirror.net/6/docs/ref/#commands.cursorGroupRight) ([`selectGroupRight`](https://codemirror.net/6/docs/ref/#commands.selectGroupRight) with Shift)\n - Cmd-ArrowLeft (on macOS): [`cursorLineStart`](https://codemirror.net/6/docs/ref/#commands.cursorLineStart) ([`selectLineStart`](https://codemirror.net/6/docs/ref/#commands.selectLineStart) with Shift)\n - Cmd-ArrowRight (on macOS): [`cursorLineEnd`](https://codemirror.net/6/docs/ref/#commands.cursorLineEnd) ([`selectLineEnd`](https://codemirror.net/6/docs/ref/#commands.selectLineEnd) with Shift)\n - ArrowUp: [`cursorLineUp`](https://codemirror.net/6/docs/ref/#commands.cursorLineUp) ([`selectLineUp`](https://codemirror.net/6/docs/ref/#commands.selectLineUp) with Shift)\n - ArrowDown: [`cursorLineDown`](https://codemirror.net/6/docs/ref/#commands.cursorLineDown) ([`selectLineDown`](https://codemirror.net/6/docs/ref/#commands.selectLineDown) with Shift)\n - Cmd-ArrowUp (on macOS): [`cursorDocStart`](https://codemirror.net/6/docs/ref/#commands.cursorDocStart) ([`selectDocStart`](https://codemirror.net/6/docs/ref/#commands.selectDocStart) with Shift)\n - Cmd-ArrowDown (on macOS): [`cursorDocEnd`](https://codemirror.net/6/docs/ref/#commands.cursorDocEnd) ([`selectDocEnd`](https://codemirror.net/6/docs/ref/#commands.selectDocEnd) with Shift)\n - Ctrl-ArrowUp (on macOS): [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp) ([`selectPageUp`](https://codemirror.net/6/docs/ref/#commands.selectPageUp) with Shift)\n - Ctrl-ArrowDown (on macOS): [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown) ([`selectPageDown`](https://codemirror.net/6/docs/ref/#commands.selectPageDown) with Shift)\n - PageUp: [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp) ([`selectPageUp`](https://codemirror.net/6/docs/ref/#commands.selectPageUp) with Shift)\n - PageDown: [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown) ([`selectPageDown`](https://codemirror.net/6/docs/ref/#commands.selectPageDown) with Shift)\n - Home: [`cursorLineBoundaryBackward`](https://codemirror.net/6/docs/ref/#commands.cursorLineBoundaryBackward) ([`selectLineBoundaryBackward`](https://codemirror.net/6/docs/ref/#commands.selectLineBoundaryBackward) with Shift)\n - End: [`cursorLineBoundaryForward`](https://codemirror.net/6/docs/ref/#commands.cursorLineBoundaryForward) ([`selectLineBoundaryForward`](https://codemirror.net/6/docs/ref/#commands.selectLineBoundaryForward) with Shift)\n - Ctrl-Home (Cmd-Home on macOS): [`cursorDocStart`](https://codemirror.net/6/docs/ref/#commands.cursorDocStart) ([`selectDocStart`](https://codemirror.net/6/docs/ref/#commands.selectDocStart) with Shift)\n - Ctrl-End (Cmd-Home on macOS): [`cursorDocEnd`](https://codemirror.net/6/docs/ref/#commands.cursorDocEnd) ([`selectDocEnd`](https://codemirror.net/6/docs/ref/#commands.selectDocEnd) with Shift)\n - Enter and Shift-Enter: [`insertNewlineAndIndent`](https://codemirror.net/6/docs/ref/#commands.insertNewlineAndIndent)\n - Ctrl-a (Cmd-a on macOS): [`selectAll`](https://codemirror.net/6/docs/ref/#commands.selectAll)\n - Backspace: [`deleteCharBackward`](https://codemirror.net/6/docs/ref/#commands.deleteCharBackward)\n - Delete: [`deleteCharForward`](https://codemirror.net/6/docs/ref/#commands.deleteCharForward)\n - Ctrl-Backspace (Alt-Backspace on macOS): [`deleteGroupBackward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupBackward)\n - Ctrl-Delete (Alt-Delete on macOS): [`deleteGroupForward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupForward)\n - Cmd-Backspace (macOS): [`deleteLineBoundaryBackward`](https://codemirror.net/6/docs/ref/#commands.deleteLineBoundaryBackward).\n - Cmd-Delete (macOS): [`deleteLineBoundaryForward`](https://codemirror.net/6/docs/ref/#commands.deleteLineBoundaryForward).\n*/\nconst standardKeymap = /*@__PURE__*/[\n    { key: \"ArrowLeft\", run: cursorCharLeft, shift: selectCharLeft, preventDefault: true },\n    { key: \"Mod-ArrowLeft\", mac: \"Alt-ArrowLeft\", run: cursorGroupLeft, shift: selectGroupLeft, preventDefault: true },\n    { mac: \"Cmd-ArrowLeft\", run: cursorLineBoundaryLeft, shift: selectLineBoundaryLeft, preventDefault: true },\n    { key: \"ArrowRight\", run: cursorCharRight, shift: selectCharRight, preventDefault: true },\n    { key: \"Mod-ArrowRight\", mac: \"Alt-ArrowRight\", run: cursorGroupRight, shift: selectGroupRight, preventDefault: true },\n    { mac: \"Cmd-ArrowRight\", run: cursorLineBoundaryRight, shift: selectLineBoundaryRight, preventDefault: true },\n    { key: \"ArrowUp\", run: cursorLineUp, shift: selectLineUp, preventDefault: true },\n    { mac: \"Cmd-ArrowUp\", run: cursorDocStart, shift: selectDocStart },\n    { mac: \"Ctrl-ArrowUp\", run: cursorPageUp, shift: selectPageUp },\n    { key: \"ArrowDown\", run: cursorLineDown, shift: selectLineDown, preventDefault: true },\n    { mac: \"Cmd-ArrowDown\", run: cursorDocEnd, shift: selectDocEnd },\n    { mac: \"Ctrl-ArrowDown\", run: cursorPageDown, shift: selectPageDown },\n    { key: \"PageUp\", run: cursorPageUp, shift: selectPageUp },\n    { key: \"PageDown\", run: cursorPageDown, shift: selectPageDown },\n    { key: \"Home\", run: cursorLineBoundaryBackward, shift: selectLineBoundaryBackward, preventDefault: true },\n    { key: \"Mod-Home\", run: cursorDocStart, shift: selectDocStart },\n    { key: \"End\", run: cursorLineBoundaryForward, shift: selectLineBoundaryForward, preventDefault: true },\n    { key: \"Mod-End\", run: cursorDocEnd, shift: selectDocEnd },\n    { key: \"Enter\", run: insertNewlineAndIndent, shift: insertNewlineAndIndent },\n    { key: \"Mod-a\", run: selectAll },\n    { key: \"Backspace\", run: deleteCharBackward, shift: deleteCharBackward },\n    { key: \"Delete\", run: deleteCharForward },\n    { key: \"Mod-Backspace\", mac: \"Alt-Backspace\", run: deleteGroupBackward },\n    { key: \"Mod-Delete\", mac: \"Alt-Delete\", run: deleteGroupForward },\n    { mac: \"Mod-Backspace\", run: deleteLineBoundaryBackward },\n    { mac: \"Mod-Delete\", run: deleteLineBoundaryForward }\n].concat(/*@__PURE__*/emacsStyleKeymap.map(b => ({ mac: b.key, run: b.run, shift: b.shift })));\n/**\nThe default keymap. Includes all bindings from\n[`standardKeymap`](https://codemirror.net/6/docs/ref/#commands.standardKeymap) plus the following:\n\n- Alt-ArrowLeft (Ctrl-ArrowLeft on macOS): [`cursorSyntaxLeft`](https://codemirror.net/6/docs/ref/#commands.cursorSyntaxLeft) ([`selectSyntaxLeft`](https://codemirror.net/6/docs/ref/#commands.selectSyntaxLeft) with Shift)\n- Alt-ArrowRight (Ctrl-ArrowRight on macOS): [`cursorSyntaxRight`](https://codemirror.net/6/docs/ref/#commands.cursorSyntaxRight) ([`selectSyntaxRight`](https://codemirror.net/6/docs/ref/#commands.selectSyntaxRight) with Shift)\n- Alt-ArrowUp: [`moveLineUp`](https://codemirror.net/6/docs/ref/#commands.moveLineUp)\n- Alt-ArrowDown: [`moveLineDown`](https://codemirror.net/6/docs/ref/#commands.moveLineDown)\n- Shift-Alt-ArrowUp: [`copyLineUp`](https://codemirror.net/6/docs/ref/#commands.copyLineUp)\n- Shift-Alt-ArrowDown: [`copyLineDown`](https://codemirror.net/6/docs/ref/#commands.copyLineDown)\n- Escape: [`simplifySelection`](https://codemirror.net/6/docs/ref/#commands.simplifySelection)\n- Ctrl-Enter (Cmd-Enter on macOS): [`insertBlankLine`](https://codemirror.net/6/docs/ref/#commands.insertBlankLine)\n- Alt-l (Ctrl-l on macOS): [`selectLine`](https://codemirror.net/6/docs/ref/#commands.selectLine)\n- Ctrl-i (Cmd-i on macOS): [`selectParentSyntax`](https://codemirror.net/6/docs/ref/#commands.selectParentSyntax)\n- Ctrl-[ (Cmd-[ on macOS): [`indentLess`](https://codemirror.net/6/docs/ref/#commands.indentLess)\n- Ctrl-] (Cmd-] on macOS): [`indentMore`](https://codemirror.net/6/docs/ref/#commands.indentMore)\n- Ctrl-Alt-\\\\ (Cmd-Alt-\\\\ on macOS): [`indentSelection`](https://codemirror.net/6/docs/ref/#commands.indentSelection)\n- Shift-Ctrl-k (Shift-Cmd-k on macOS): [`deleteLine`](https://codemirror.net/6/docs/ref/#commands.deleteLine)\n- Shift-Ctrl-\\\\ (Shift-Cmd-\\\\ on macOS): [`cursorMatchingBracket`](https://codemirror.net/6/docs/ref/#commands.cursorMatchingBracket)\n- Ctrl-/ (Cmd-/ on macOS): [`toggleComment`](https://codemirror.net/6/docs/ref/#commands.toggleComment).\n- Shift-Alt-a: [`toggleBlockComment`](https://codemirror.net/6/docs/ref/#commands.toggleBlockComment).\n- Ctrl-m (Alt-Shift-m on macOS): [`toggleTabFocusMode`](https://codemirror.net/6/docs/ref/#commands.toggleTabFocusMode).\n*/\nconst defaultKeymap = /*@__PURE__*/[\n    { key: \"Alt-ArrowLeft\", mac: \"Ctrl-ArrowLeft\", run: cursorSyntaxLeft, shift: selectSyntaxLeft },\n    { key: \"Alt-ArrowRight\", mac: \"Ctrl-ArrowRight\", run: cursorSyntaxRight, shift: selectSyntaxRight },\n    { key: \"Alt-ArrowUp\", run: moveLineUp },\n    { key: \"Shift-Alt-ArrowUp\", run: copyLineUp },\n    { key: \"Alt-ArrowDown\", run: moveLineDown },\n    { key: \"Shift-Alt-ArrowDown\", run: copyLineDown },\n    { key: \"Escape\", run: simplifySelection },\n    { key: \"Mod-Enter\", run: insertBlankLine },\n    { key: \"Alt-l\", mac: \"Ctrl-l\", run: selectLine },\n    { key: \"Mod-i\", run: selectParentSyntax, preventDefault: true },\n    { key: \"Mod-[\", run: indentLess },\n    { key: \"Mod-]\", run: indentMore },\n    { key: \"Mod-Alt-\\\\\", run: indentSelection },\n    { key: \"Shift-Mod-k\", run: deleteLine },\n    { key: \"Shift-Mod-\\\\\", run: cursorMatchingBracket },\n    { key: \"Mod-/\", run: toggleComment },\n    { key: \"Alt-A\", run: toggleBlockComment },\n    { key: \"Ctrl-m\", mac: \"Shift-Alt-m\", run: toggleTabFocusMode },\n].concat(standardKeymap);\n/**\nA binding that binds Tab to [`indentMore`](https://codemirror.net/6/docs/ref/#commands.indentMore) and\nShift-Tab to [`indentLess`](https://codemirror.net/6/docs/ref/#commands.indentLess).\nPlease see the [Tab example](../../examples/tab/) before using\nthis.\n*/\nconst indentWithTab = { key: \"Tab\", run: indentMore, shift: indentLess };\n\nexport { blockComment, blockUncomment, copyLineDown, copyLineUp, cursorCharBackward, cursorCharBackwardLogical, cursorCharForward, cursorCharForwardLogical, cursorCharLeft, cursorCharRight, cursorDocEnd, cursorDocStart, cursorGroupBackward, cursorGroupForward, cursorGroupForwardWin, cursorGroupLeft, cursorGroupRight, cursorLineBoundaryBackward, cursorLineBoundaryForward, cursorLineBoundaryLeft, cursorLineBoundaryRight, cursorLineDown, cursorLineEnd, cursorLineStart, cursorLineUp, cursorMatchingBracket, cursorPageDown, cursorPageUp, cursorSubwordBackward, cursorSubwordForward, cursorSyntaxLeft, cursorSyntaxRight, defaultKeymap, deleteCharBackward, deleteCharBackwardStrict, deleteCharForward, deleteGroupBackward, deleteGroupForward, deleteLine, deleteLineBoundaryBackward, deleteLineBoundaryForward, deleteToLineEnd, deleteToLineStart, deleteTrailingWhitespace, emacsStyleKeymap, history, historyField, historyKeymap, indentLess, indentMore, indentSelection, indentWithTab, insertBlankLine, insertNewline, insertNewlineAndIndent, insertNewlineKeepIndent, insertTab, invertedEffects, isolateHistory, lineComment, lineUncomment, moveLineDown, moveLineUp, redo, redoDepth, redoSelection, selectAll, selectCharBackward, selectCharBackwardLogical, selectCharForward, selectCharForwardLogical, selectCharLeft, selectCharRight, selectDocEnd, selectDocStart, selectGroupBackward, selectGroupForward, selectGroupForwardWin, selectGroupLeft, selectGroupRight, selectLine, selectLineBoundaryBackward, selectLineBoundaryForward, selectLineBoundaryLeft, selectLineBoundaryRight, selectLineDown, selectLineEnd, selectLineStart, selectLineUp, selectMatchingBracket, selectPageDown, selectPageUp, selectParentSyntax, selectSubwordBackward, selectSubwordForward, selectSyntaxLeft, selectSyntaxRight, simplifySelection, splitLine, standardKeymap, temporarilySetTabFocusMode, toggleBlockComment, toggleBlockCommentByLine, toggleComment, toggleLineComment, toggleTabFocusMode, transposeChars, undo, undoDepth, undoSelection };\n","import { EditorView } from '@codemirror/view';\nimport { HighlightStyle, syntaxHighlighting } from '@codemirror/language';\nimport { tags } from '@lezer/highlight';\n\n// Using https://github.com/one-dark/vscode-one-dark-theme/ as reference for the colors\nconst chalky = \"#e5c07b\", coral = \"#e06c75\", cyan = \"#56b6c2\", invalid = \"#ffffff\", ivory = \"#abb2bf\", stone = \"#7d8799\", // Brightened compared to original to increase contrast\nmalibu = \"#61afef\", sage = \"#98c379\", whiskey = \"#d19a66\", violet = \"#c678dd\", darkBackground = \"#21252b\", highlightBackground = \"#2c313a\", background = \"#282c34\", tooltipBackground = \"#353a42\", selection = \"#3E4451\", cursor = \"#528bff\";\n/**\nThe colors used in the theme, as CSS color strings.\n*/\nconst color = {\n    chalky,\n    coral,\n    cyan,\n    invalid,\n    ivory,\n    stone,\n    malibu,\n    sage,\n    whiskey,\n    violet,\n    darkBackground,\n    highlightBackground,\n    background,\n    tooltipBackground,\n    selection,\n    cursor\n};\n/**\nThe editor theme styles for One Dark.\n*/\nconst oneDarkTheme = /*@__PURE__*/EditorView.theme({\n    \"&\": {\n        color: ivory,\n        backgroundColor: background\n    },\n    \".cm-content\": {\n        caretColor: cursor\n    },\n    \".cm-cursor, .cm-dropCursor\": { borderLeftColor: cursor },\n    \"&.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground, .cm-selectionBackground, .cm-content ::selection\": { backgroundColor: selection },\n    \".cm-panels\": { backgroundColor: darkBackground, color: ivory },\n    \".cm-panels.cm-panels-top\": { borderBottom: \"2px solid black\" },\n    \".cm-panels.cm-panels-bottom\": { borderTop: \"2px solid black\" },\n    \".cm-searchMatch\": {\n        backgroundColor: \"#72a1ff59\",\n        outline: \"1px solid #457dff\"\n    },\n    \".cm-searchMatch.cm-searchMatch-selected\": {\n        backgroundColor: \"#6199ff2f\"\n    },\n    \".cm-activeLine\": { backgroundColor: \"#6699ff0b\" },\n    \".cm-selectionMatch\": { backgroundColor: \"#aafe661a\" },\n    \"&.cm-focused .cm-matchingBracket, &.cm-focused .cm-nonmatchingBracket\": {\n        backgroundColor: \"#bad0f847\"\n    },\n    \".cm-gutters\": {\n        backgroundColor: background,\n        color: stone,\n        border: \"none\"\n    },\n    \".cm-activeLineGutter\": {\n        backgroundColor: highlightBackground\n    },\n    \".cm-foldPlaceholder\": {\n        backgroundColor: \"transparent\",\n        border: \"none\",\n        color: \"#ddd\"\n    },\n    \".cm-tooltip\": {\n        border: \"none\",\n        backgroundColor: tooltipBackground\n    },\n    \".cm-tooltip .cm-tooltip-arrow:before\": {\n        borderTopColor: \"transparent\",\n        borderBottomColor: \"transparent\"\n    },\n    \".cm-tooltip .cm-tooltip-arrow:after\": {\n        borderTopColor: tooltipBackground,\n        borderBottomColor: tooltipBackground\n    },\n    \".cm-tooltip-autocomplete\": {\n        \"& > ul > li[aria-selected]\": {\n            backgroundColor: highlightBackground,\n            color: ivory\n        }\n    }\n}, { dark: true });\n/**\nThe highlighting style for code in the One Dark theme.\n*/\nconst oneDarkHighlightStyle = /*@__PURE__*/HighlightStyle.define([\n    { tag: tags.keyword,\n        color: violet },\n    { tag: [tags.name, tags.deleted, tags.character, tags.propertyName, tags.macroName],\n        color: coral },\n    { tag: [/*@__PURE__*/tags.function(tags.variableName), tags.labelName],\n        color: malibu },\n    { tag: [tags.color, /*@__PURE__*/tags.constant(tags.name), /*@__PURE__*/tags.standard(tags.name)],\n        color: whiskey },\n    { tag: [/*@__PURE__*/tags.definition(tags.name), tags.separator],\n        color: ivory },\n    { tag: [tags.typeName, tags.className, tags.number, tags.changed, tags.annotation, tags.modifier, tags.self, tags.namespace],\n        color: chalky },\n    { tag: [tags.operator, tags.operatorKeyword, tags.url, tags.escape, tags.regexp, tags.link, /*@__PURE__*/tags.special(tags.string)],\n        color: cyan },\n    { tag: [tags.meta, tags.comment],\n        color: stone },\n    { tag: tags.strong,\n        fontWeight: \"bold\" },\n    { tag: tags.emphasis,\n        fontStyle: \"italic\" },\n    { tag: tags.strikethrough,\n        textDecoration: \"line-through\" },\n    { tag: tags.link,\n        color: stone,\n        textDecoration: \"underline\" },\n    { tag: tags.heading,\n        fontWeight: \"bold\",\n        color: coral },\n    { tag: [tags.atom, tags.bool, /*@__PURE__*/tags.special(tags.variableName)],\n        color: whiskey },\n    { tag: [tags.processingInstruction, tags.string, tags.inserted],\n        color: sage },\n    { tag: tags.invalid,\n        color: invalid },\n]);\n/**\nExtension to enable the One Dark theme (both the editor theme and\nthe highlight style).\n*/\nconst oneDark = [oneDarkTheme, /*@__PURE__*/syntaxHighlighting(oneDarkHighlightStyle)];\n\nexport { color, oneDark, oneDarkHighlightStyle, oneDarkTheme };\n"],"names":["basicNormalize","String","prototype","normalize","x","SearchCursor","constructor","text","query","from","arguments","length","undefined","to","test","this","value","done","matches","buffer","bufferPos","iter","iterRange","bufferStart","peek","next","codePointAt","pop","nextOverlapping","str","fromCodePoint","start","codePointSize","norm","i","pos","code","charCodeAt","match","end","index","keep","splice","push","Symbol","iterator","empty","exec","baseFlags","unicode","RegExpCursor","options","curLine","MultilineRegExpCursor","re","RegExp","ignoreCase","startLine","lineAt","curLineStart","matchPos","toCharEnd","getLine","skip","lineBreak","slice","nextLine","off","lastIndex","flattened","WeakMap","FlattenedDoc","get","doc","cached","flat","sliceString","set","cachedFrom","chunkEnd","line","createLineDialog","view","state","selection","main","head","number","input","elt","class","name","go","sign","ln","cl","percent","col","pc","lines","Math","round","docLine","max","min","EditorSelection","cursor","dispatch","effects","dialogEffect","of","EditorView","scrollIntoView","y","focus","dom","onkeydown","event","keyCode","preventDefault","onsubmit","phrase","type","onclick","StateEffect","define","dialogField","StateField","create","update","tr","e","is","provide","f","showPanel","val","baseTheme$1","baseTheme","padding","position","fontSize","top","bottom","right","backgroundColor","border","font","defaultHighlightOptions","highlightWordAroundCursor","minSelectionLength","maxMatches","wholeWords","highlightConfig","Facet","combine","combineConfig","a","b","matchDeco","Decoration","mark","mainMatchDeco","insideWordBoundaries","check","sliceDoc","CharCategory","Word","matchHighlighter","ViewPlugin","fromClass","decorations","getDeco","selectionSet","docChanged","viewportChanged","conf","facet","sel","ranges","none","range","word","wordAt","charCategorizer","len","insideWord","deco","part","visibleRanges","v","defaultTheme","searchConfigFacet","configs","caseSensitive","literal","regexp","wholeWord","createPanel","SearchPanel","scrollToMatch","SearchQuery","config","search","replace","valid","source","_a","validRegExp","unquoted","unquote","_","ch","eq","other","RegExpQuery","StringQuery","getCursor","st","EditorState","regexpCursor","stringCursor","QueryType","spec","toLowerCase","categorizer","buf","bufPos","charBefore","charAfter","super","nextMatch","curFrom","curTo","prevMatchInRange","prevMatch","found","getReplacement","_result","matchAll","limit","highlight","add","_from","_to","findClusterBreak","size","result","m","l","n","setSearchQuery","togglePanel","searchState","SearchState","defaultQuery","effect","panel","createSearchPanel","matchMark","selectedMatchMark","searchHighlighter","field","startState","_ref3","builder","RangeSetBuilder","selected","some","r","finish","searchCommand","openSearchPanel","findNext","_ref4","single","announceMatch","userEvent","selectSearchInput","findPrevious","_ref5","prev","selectMatches","_ref6","map","replaceNext","_ref8","readOnly","replacement","changes","toText","insert","announce","changeSet","replaceAll","_ref9","announceText","fallback","_b","_c","_d","_e","selText","getSearchInput","getPanel","querySelector","root","activeElement","select","searchInput","appendConfig","searchExtensions","closeSearchPanel","contains","searchKeymap","key","run","scope","shift","_ref7","cur","_ref2","_ref","newSel","mainIndex","selectWord","searchedText","fullWord","cycled","findNextOccurrence","addRange","button","content","commit","bind","searchField","placeholder","form","onchange","onkeyup","replaceField","caseField","checked","reField","wordField","keydown","runScopeHandlers","target","shiftKey","transactions","setQuery","mount","AnnounceMargin","Break","_ref0","lineEnd","concat","margin","marginRight","whiteSpace","Prec","low","SelectedDiagnostic","diagnostic","LintState","diagnostics","init","diagnosticFilter","lintConfig","markerFilter","sorted","sort","active","reduce","p","d","sev","maxSeverity","widget","DiagnosticWidget","markClass","c","inclusiveEnd","findDiagnostic","after","between","indexOf","setDiagnosticsEffect","movePanelSelection","lintState","mapped","selPos","mapPos","autoPanel","LintPanel","open","s","activeMark","lintTooltip","side","tooltipFilter","above","diagnosticsTooltip","renderDiagnostic","closeLintPanel","lintKeymap","lintExtensions","anchor","Object","assign","sources","filter","delay","needsRefresh","hideOn","u","assignKeys","actions","assigned","inPanel","keys","severity","renderMessage","message","action","fired","click","apply","keyIndex","nameElt","onmousedown","WidgetType","toDOM","PanelItem","id","floor","random","toString","setAttribute","items","list","tabIndex","role","moveSelection","selectedIndex","toUpperCase","needsSync","newSelectedItem","seen","Set","_start","_end","has","item","j","hasAttribute","removeAttribute","requestMeasure","read","getBoundingClientRect","write","scaleY","height","offsetHeight","scrollTop","sync","domPos","firstChild","rm","nextSibling","remove","parentNode","insertBefore","underline","color","encodeURIComponent","svg","marginLeft","display","borderLeft","borderRadius","opacity","backgroundPosition","backgroundRepeat","paddingBottom","backgroundImage","left","borderRight","borderBottom","borderBottomColor","maxHeight","overflowY","textDecoration","background_fallback","color_fallback","background","severityWeight","weight","w","GutterMarker","compute","hoverTooltip","tooltip","touchesRange","basicSetup","crosshairCursor","initCrosshairCursor","keymaps","closeBracketsKeymap","defaultKeymap","historyKeymap","foldKeymap","completionKeymap","extensions","lineNumbers","highlightActiveLineGutter","highlightSpecialChars","history","foldGutter","drawSelection","dropCursor","allowMultipleSelections","indentOnInput","syntaxHighlighting","defaultHighlightStyle","bracketMatching","closeBrackets","autocompletion","rectangularSelection","highlightActiveLine","highlightSelectionMatches","ext","tabSize","indentUnit","repeat","keymap","Boolean","minimalSetup","command","option","toggleLineComment","changeLineComment","toggleBlockComment","changeBlockComment","toggleBlockCommentByLine","o","fromLine","toLine","last","selectedLineRanges","getConfig","data","languageDataAt","SearchMargin","tokens","block","every","comments","startText","endText","close","textBefore","textAfter","spaceBefore","spaceAfter","beforeOff","startSpace","endSpace","endOff","charAt","findBlockComment","comment","token","prevLine","startI","minIndent","indent","fromHistory","Annotation","isolateHistory","invertedEffects","historyConfig","minDepth","newGroupDelay","joinToEvent","_t","isAdjacent","adj","historyField_","HistoryState","fromHist","annotation","HistEvent","fromTransaction","undone","updateBranch","addSelection","rest","isolate","Transaction","addToHistory","addMapping","desc","time","addChanges","toJSON","fromJSON","json","domEventHandlers","beforeinput","inputType","undo","redo","cmd","historyState","undoSelection","redoSelection","startSelection","selectionsAfter","setSelAfter","ChangeSet","ChangeDesc","invert","selections","branch","maxLen","newEvent","newBranch","conc","MaxSelectionsPerEvent","lastEvent","sels","popSelection","addMappingToBranch","mapping","mapEvent","extraSelections","mappedChanges","before","mapDesc","fullMapping","composeDesc","mapEffects","joinableUserEvent","prevTime","prevUserEvent","iterChangedRanges","t","_f","compose","onlySelection","annotations","mac","linux","updateSel","by","setSel","moveSel","how","rangeEnd","forward","cursorByChar","moveByChar","ltrAtCursor","textDirectionAt","Direction","LTR","cursorCharLeft","cursorCharRight","cursorByGroup","moveByGroup","interestingNode","node","bracketProp","prop","moveBySyntax","newPos","syntaxTree","resolveInner","NodeProp","closedBy","openedBy","at","childAfter","childBefore","matchBrackets","matched","cursorByLine","moved","moveVertically","moveToLineBoundary","Intl","Segmenter","cursorLineUp","cursorLineDown","pageInfo","selfScroll","scrollDOM","clientHeight","scrollHeight","marginTop","marginBottom","scrollMargins","margins","ownerDocument","defaultView","window","innerHeight","defaultLineHeight","cursorByPage","page","startPos","coordsAtPos","scrollRect","scrollBottom","yMargin","cursorPageUp","cursorPageDown","moveByLineBoundary","lineBlockAt","space","extendSel","goalColumn","bidiLevel","selectByChar","selectCharLeft","selectCharRight","selectByGroup","selectByLine","selectLineUp","selectLineDown","selectByPage","selectPageUp","selectPageDown","cursorDocStart","cursorDocEnd","selectDocStart","selectDocEnd","deleteBy","changeByRange","towards","skipAtomic","atomicRanges","deleteByChar","byIndentUnit","targetPos","drop","countColumn","getIndentUnit","deleteCharBackward","deleteCharForward","deleteByGroup","categorize","cat","nextChar","nextCat","deleteGroupBackward","selectedLineBlocks","blocks","upto","endLine","moveLine","copyLine","insertNewlineAndIndent","newlineAndIndent","atEof","_ref24","explode","context","isBetweenBrackets","cx","IndentContext","simulateBreak","simulateDoubleBreak","getIndentation","indentString","lineIndent","Text","changeBySelectedLine","atLine","indentMore","_ref26","indentLess","_ref27","_ref17","_ref19","_ref18","_ref20","_ref13","_ref10","_ref11","_ref12","tree","stack","resolveStack","stackBefore","_ref25","updated","overrideIndentation","_ref21","dist","lineWrapping","assoc","documentTop","extend","matching","toMatchingBracket","setTabFocusMode","_ref1","lineStart","_ref15","_ref16","append","indentWithTab","chalky","coral","cyan","invalid","ivory","stone","malibu","sage","whiskey","violet","darkBackground","highlightBackground","tooltipBackground","oneDarkTheme","theme","caretColor","borderLeftColor","borderTop","outline","borderTopColor","dark","oneDarkHighlightStyle","HighlightStyle","tag","tags","keyword","deleted","character","propertyName","macroName","function","variableName","labelName","constant","standard","definition","separator","typeName","className","changed","modifier","self","namespace","operator","operatorKeyword","url","escape","link","special","string","meta","strong","fontWeight","emphasis","fontStyle","strikethrough","heading","atom","bool","processingInstruction","inserted","oneDark"],"sourceRoot":""}