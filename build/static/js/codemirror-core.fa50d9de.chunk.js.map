{"version":3,"file":"static/js/codemirror-core.fa50d9de.chunk.js","mappings":"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","sources":["../node_modules/@uiw/react-codemirror/esm/theme/light.js","../node_modules/@uiw/react-codemirror/esm/getDefaultExtensions.js","../node_modules/@uiw/react-codemirror/esm/utils.js","../node_modules/@uiw/react-codemirror/esm/useCodeMirror.js","../node_modules/@uiw/react-codemirror/esm/index.js"],"sourcesContent":["import { EditorView } from '@codemirror/view';\nexport var defaultLightThemeOption = EditorView.theme({\n  '&': {\n    backgroundColor: '#fff'\n  }\n}, {\n  dark: false\n});","import { indentWithTab } from '@codemirror/commands';\nimport { basicSetup } from '@uiw/codemirror-extensions-basic-setup';\nimport { EditorView, keymap, placeholder } from '@codemirror/view';\nimport { oneDark } from '@codemirror/theme-one-dark';\nimport { EditorState } from '@codemirror/state';\nimport { defaultLightThemeOption } from \"./theme/light.js\";\nexport * from '@codemirror/theme-one-dark';\nexport * from \"./theme/light.js\";\nexport var getDefaultExtensions = function getDefaultExtensions(optios) {\n  if (optios === void 0) {\n    optios = {};\n  }\n  var {\n    indentWithTab: defaultIndentWithTab = true,\n    editable = true,\n    readOnly = false,\n    theme = 'light',\n    placeholder: placeholderStr = '',\n    basicSetup: defaultBasicSetup = true\n  } = optios;\n  var getExtensions = [];\n  if (defaultIndentWithTab) {\n    getExtensions.unshift(keymap.of([indentWithTab]));\n  }\n  if (defaultBasicSetup) {\n    if (typeof defaultBasicSetup === 'boolean') {\n      getExtensions.unshift(basicSetup());\n    } else {\n      getExtensions.unshift(basicSetup(defaultBasicSetup));\n    }\n  }\n  if (placeholderStr) {\n    getExtensions.unshift(placeholder(placeholderStr));\n  }\n  switch (theme) {\n    case 'light':\n      getExtensions.push(defaultLightThemeOption);\n      break;\n    case 'dark':\n      getExtensions.push(oneDark);\n      break;\n    case 'none':\n      break;\n    default:\n      getExtensions.push(theme);\n      break;\n  }\n  if (editable === false) {\n    getExtensions.push(EditorView.editable.of(false));\n  }\n  if (readOnly) {\n    getExtensions.push(EditorState.readOnly.of(true));\n  }\n  return [...getExtensions];\n};","export var getStatistics = view => {\n  return {\n    line: view.state.doc.lineAt(view.state.selection.main.from),\n    lineCount: view.state.doc.lines,\n    lineBreak: view.state.lineBreak,\n    length: view.state.doc.length,\n    readOnly: view.state.readOnly,\n    tabSize: view.state.tabSize,\n    selection: view.state.selection,\n    selectionAsSingle: view.state.selection.asSingle().main,\n    ranges: view.state.selection.ranges,\n    selectionCode: view.state.sliceDoc(view.state.selection.main.from, view.state.selection.main.to),\n    selections: view.state.selection.ranges.map(r => view.state.sliceDoc(r.from, r.to)),\n    selectedText: view.state.selection.ranges.some(r => !r.empty)\n  };\n};","import { useEffect, useLayoutEffect, useState } from 'react';\nimport { Annotation, EditorState, StateEffect } from '@codemirror/state';\nimport { EditorView } from '@codemirror/view';\nimport { getDefaultExtensions } from \"./getDefaultExtensions.js\";\nimport { getStatistics } from \"./utils.js\";\nvar External = Annotation.define();\nvar emptyExtensions = [];\nexport function useCodeMirror(props) {\n  var {\n    value,\n    selection,\n    onChange,\n    onStatistics,\n    onCreateEditor,\n    onUpdate,\n    extensions = emptyExtensions,\n    autoFocus,\n    theme = 'light',\n    height = null,\n    minHeight = null,\n    maxHeight = null,\n    width = null,\n    minWidth = null,\n    maxWidth = null,\n    placeholder: placeholderStr = '',\n    editable = true,\n    readOnly = false,\n    indentWithTab: defaultIndentWithTab = true,\n    basicSetup: defaultBasicSetup = true,\n    root,\n    initialState\n  } = props;\n  var [container, setContainer] = useState();\n  var [view, setView] = useState();\n  var [state, setState] = useState();\n  var defaultThemeOption = EditorView.theme({\n    '&': {\n      height,\n      minHeight,\n      maxHeight,\n      width,\n      minWidth,\n      maxWidth\n    },\n    '& .cm-scroller': {\n      height: '100% !important'\n    }\n  });\n  var updateListener = EditorView.updateListener.of(vu => {\n    if (vu.docChanged && typeof onChange === 'function' &&\n    // Fix echoing of the remote changes:\n    // If transaction is market as remote we don't have to call `onChange` handler again\n    !vu.transactions.some(tr => tr.annotation(External))) {\n      var doc = vu.state.doc;\n      var _value = doc.toString();\n      onChange(_value, vu);\n    }\n    onStatistics && onStatistics(getStatistics(vu));\n  });\n  var defaultExtensions = getDefaultExtensions({\n    theme,\n    editable,\n    readOnly,\n    placeholder: placeholderStr,\n    indentWithTab: defaultIndentWithTab,\n    basicSetup: defaultBasicSetup\n  });\n  var getExtensions = [updateListener, defaultThemeOption, ...defaultExtensions];\n  if (onUpdate && typeof onUpdate === 'function') {\n    getExtensions.push(EditorView.updateListener.of(onUpdate));\n  }\n  getExtensions = getExtensions.concat(extensions);\n  useLayoutEffect(() => {\n    if (container && !state) {\n      var config = {\n        doc: value,\n        selection,\n        extensions: getExtensions\n      };\n      var stateCurrent = initialState ? EditorState.fromJSON(initialState.json, config, initialState.fields) : EditorState.create(config);\n      setState(stateCurrent);\n      if (!view) {\n        var viewCurrent = new EditorView({\n          state: stateCurrent,\n          parent: container,\n          root\n        });\n        setView(viewCurrent);\n        onCreateEditor && onCreateEditor(viewCurrent, stateCurrent);\n      }\n    }\n    return () => {\n      if (view) {\n        setState(undefined);\n        setView(undefined);\n      }\n    };\n  }, [container, state]);\n  useEffect(() => {\n    if (props.container) {\n      setContainer(props.container);\n    }\n  }, [props.container]);\n  useEffect(() => () => {\n    if (view) {\n      view.destroy();\n      setView(undefined);\n    }\n  }, [view]);\n  useEffect(() => {\n    if (autoFocus && view) {\n      view.focus();\n    }\n  }, [autoFocus, view]);\n  useEffect(() => {\n    if (view) {\n      view.dispatch({\n        effects: StateEffect.reconfigure.of(getExtensions)\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [theme, extensions, height, minHeight, maxHeight, width, minWidth, maxWidth, placeholderStr, editable, readOnly, defaultIndentWithTab, defaultBasicSetup, onChange, onUpdate]);\n  useEffect(() => {\n    if (value === undefined) {\n      return;\n    }\n    var currentValue = view ? view.state.doc.toString() : '';\n    if (view && value !== currentValue) {\n      view.dispatch({\n        changes: {\n          from: 0,\n          to: currentValue.length,\n          insert: value || ''\n        },\n        annotations: [External.of(true)]\n      });\n    }\n  }, [value, view]);\n  return {\n    state,\n    setState,\n    view,\n    setView,\n    container,\n    setContainer\n  };\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"value\", \"selection\", \"extensions\", \"onChange\", \"onStatistics\", \"onCreateEditor\", \"onUpdate\", \"autoFocus\", \"theme\", \"height\", \"minHeight\", \"maxHeight\", \"width\", \"minWidth\", \"maxWidth\", \"basicSetup\", \"placeholder\", \"indentWithTab\", \"editable\", \"readOnly\", \"root\", \"initialState\"];\nimport React, { useRef, forwardRef, useImperativeHandle, useCallback } from 'react';\nimport { useCodeMirror } from \"./useCodeMirror.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport * from '@codemirror/view';\nexport * from '@codemirror/state';\nexport * from '@uiw/codemirror-extensions-basic-setup';\nexport * from \"./useCodeMirror.js\";\nexport * from \"./getDefaultExtensions.js\";\nexport * from \"./utils.js\";\nvar ReactCodeMirror = /*#__PURE__*/forwardRef((props, ref) => {\n  var {\n      className,\n      value = '',\n      selection,\n      extensions = [],\n      onChange,\n      onStatistics,\n      onCreateEditor,\n      onUpdate,\n      autoFocus,\n      theme = 'light',\n      height,\n      minHeight,\n      maxHeight,\n      width,\n      minWidth,\n      maxWidth,\n      basicSetup,\n      placeholder,\n      indentWithTab,\n      editable,\n      readOnly,\n      root,\n      initialState\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var editor = useRef(null);\n  var {\n    state,\n    view,\n    container,\n    setContainer\n  } = useCodeMirror({\n    root,\n    value,\n    autoFocus,\n    theme,\n    height,\n    minHeight,\n    maxHeight,\n    width,\n    minWidth,\n    maxWidth,\n    basicSetup,\n    placeholder,\n    indentWithTab,\n    editable,\n    readOnly,\n    selection,\n    onChange,\n    onStatistics,\n    onCreateEditor,\n    onUpdate,\n    extensions,\n    initialState\n  });\n  useImperativeHandle(ref, () => ({\n    editor: editor.current,\n    state: state,\n    view: view\n  }), [editor, container, state, view]);\n  var setEditorRef = useCallback(el => {\n    editor.current = el;\n    setContainer(el);\n  }, [setContainer]);\n\n  // check type of value\n  if (typeof value !== 'string') {\n    throw new Error(\"value must be typeof string but got \" + typeof value);\n  }\n  var defaultClassNames = typeof theme === 'string' ? \"cm-theme-\" + theme : 'cm-theme';\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: setEditorRef,\n    className: \"\" + defaultClassNames + (className ? \" \" + className : '')\n  }, other));\n});\nReactCodeMirror.displayName = 'CodeMirror';\nexport default ReactCodeMirror;"],"names":["defaultLightThemeOption","EditorView","theme","backgroundColor","dark","getDefaultExtensions","optios","indentWithTab","defaultIndentWithTab","editable","readOnly","placeholder","placeholderStr","basicSetup","defaultBasicSetup","getExtensions","unshift","keymap","of","push","oneDark","EditorState","getStatistics","view","line","state","doc","lineAt","selection","main","from","lineCount","lines","lineBreak","length","tabSize","selectionAsSingle","asSingle","ranges","selectionCode","sliceDoc","to","selections","map","r","selectedText","some","empty","External","Annotation","define","emptyExtensions","useCodeMirror","props","value","onChange","onStatistics","onCreateEditor","onUpdate","extensions","autoFocus","height","minHeight","maxHeight","width","minWidth","maxWidth","root","initialState","container","setContainer","useState","setView","setState","defaultThemeOption","updateListener","vu","docChanged","transactions","tr","annotation","_value","toString","concat","useLayoutEffect","config","stateCurrent","fromJSON","json","fields","create","viewCurrent","parent","undefined","useEffect","destroy","focus","dispatch","effects","StateEffect","reconfigure","currentValue","changes","insert","annotations","_excluded","ReactCodeMirror","forwardRef","ref","className","other","_objectWithoutPropertiesLoose","editor","useRef","useImperativeHandle","current","setEditorRef","useCallback","el","Error","defaultClassNames","_jsx","_extends","displayName"],"sourceRoot":""}